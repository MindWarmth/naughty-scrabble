{"version":3,"sources":["context.js","logo.gif","pages/Welcome.jsx","helpers/username.js","pages/Create.jsx","helpers/transport-provider.js","pages/Invite.jsx","pages/Join.jsx","components/Board/Board.js","components/Board/index.js","components/Log/index.js","components/Scoreboard/index.js","pages/Game.jsx","App.js","reportWebVitals.js","index.js"],"names":["Context","createContext","Welcome","Grid","container","direction","justify","alignItems","item","xs","sm","md","src","logo","className","alt","Button","component","Link","to","color","variant","size","USERNAMES","LOCALSTORAGE_KEY","getUsername","username","localStorage","getItem","prefix","Math","floor","random","length","number","setItem","useStyles","makeStyles","formEl","marginTop","LOCALSTORAGE_DICTIONARY_KEY","Create","classes","useState","text","setText","setUsername","useContext","publicURL","gameID","setGameID","dictionary","setDictionary","user","setUser","opponent","setOpponent","message","setMessage","isWindowWorker","Boolean","window","Worker","dictionaryWorker","handleOnClickPasteFromClipBoard","a","navigator","clipboard","readText","console","log","useEffect","spacing","TextField","label","placeholder","fullWidth","value","required","onChange","currentTarget","multiline","rows","startIcon","onClick","Hidden","xsDown","disabled","nanoid","postMessage","onmessage","data","TYPE","TransportContext","open","sendMessage","crossBrowserPeerConnection","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","msRTCPeerConnection","crossBrowserSessionDescription","RTCSessionDescription","mozRTCSessionDescription","webkitRTCSessionDescription","msRTCSessionDescription","config","connection","TransportProvider","props","dataChannel","setDataChannel","transport","Promise","resolve","reject","peerConnection","ws","openDataChannel","onicecandidate","e","candidate","sendNegotiation","createDataChannel","reliable","onopen","onclose","onerror","ondatachannel","ev","channel","JSON","parse","error","type","sdp","json","from","action","send","stringify","processOffer","offer","setRemoteDescription","catch","sdpConstraints","createAnswer","then","setLocalDescription","err","processAnswer","answer","processIce","iceCandidate","addIceCandidate","RTCIceCandidate","WebSocket","url","offerToReceiveAudio","offerToReceiveVideo","createOffer","Provider","useTransport","COPY_STATUS","Invite","copyStatus","setCopyStatus","loading","setLoading","history","useHistory","baseUrl","location","protocol","host","pathname","gameURL","gamePath","writeText","share","title","push","CircularProgress","smUp","Join","useParams","Array","fill","cols","Board","fieldsData","canPlay","cn","map","rval","rowIndex","cval","colIndex","row","col","field","get","matchValue","String","toUpperCase","match","letter","checked","startVertical","startHorizontal","endVertical","endHorizontal","vertical","horizontal","theme","root","backgroundColor","palette","background","paper","maxHeight","overflow","Log","logs","setLogs","prevLogs","previousStep","List","dense","index","ListItem","ListItemText","primary","table","marginBottom","Scoreboard","TableContainer","Paper","Table","TableBody","TableRow","TableCell","scope","align","Game","params","setFieldsData","chunks","setChunks","setCanPlay","chunksWorker","terminate","foundWords","useMemo","list","reduce","acc","chunk","includes","fieldsDataEnhanced","res","cloneDeep","Object","values","forEach","curr","start","end","startCol","endCol","set","flow","startRow","endRow","newFieldsData","IconButton","aria-label","word","App","createMuiTheme","light","main","dark","contrastText","ThemeProvider","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1a85033.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst Context = createContext();\n\nexport default Context;\n","export default __webpack_public_path__ + \"static/media/logo.6ba9428e.gif\";","import { Link } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport logo from '../logo.gif';\n\nconst Welcome = () => (\n  <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n    <Grid item xs={ 12 } sm={ 6 } md={ 5 }>\n      <img src={logo} className=\"logo\" alt=\"Naughty Board\" />\n    </Grid>\n    <Grid item xs={ 12 } sm={ 6 } md={ 5 }>\n      <h1>Welcome to the Naughty Board!</h1>\n      <p>Press the button below to create a new game.</p>\n      <Button component={ Link } to=\"/create\" color=\"primary\" variant=\"contained\" size=\"large\">\n        Create new game\n      </Button>\n      <p>To join an existed game you need a link.</p>\n    </Grid>\n  </Grid>\n);\n\nexport default Welcome;\n","const USERNAMES = ['Bella', 'Sam', 'Rocky', 'Lucky', 'Oscar', 'Pepper', 'Harley'];\nconst LOCALSTORAGE_KEY = 'username';\n\nexport const getUsername = () => {\n  let username = localStorage.getItem(LOCALSTORAGE_KEY);\n  if (username) {\n    return username;\n  }\n\n  const prefix = USERNAMES[Math.floor(Math.random() * USERNAMES.length)];\n  const number = Math.floor(Math.random() * 1000000);\n  username = `${prefix}_${number}`;\n\n  localStorage.setItem(LOCALSTORAGE_KEY, username);\n\n  return username;\n}\n","import { useState, useContext, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { nanoid } from 'nanoid';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Context from '../context';\nimport { getUsername } from '../helpers/username';\n\nconst useStyles = makeStyles({\n  formEl: {\n    marginTop: 16,\n  },\n});\nconst LOCALSTORAGE_DICTIONARY_KEY = 'dictionary';\n\nconst Create = () => {\n  const classes = useStyles();\n  const [ text, setText ] = useState(localStorage.getItem(LOCALSTORAGE_DICTIONARY_KEY) || '');\n  const [ username, setUsername ] = useState(getUsername());\n  const {\n    publicURL,\n    gameID, setGameID,\n    dictionary, setDictionary,\n    user, setUser,\n    opponent, setOpponent,\n    message, setMessage,\n  } = useContext(Context);\n  const isWindowWorker = Boolean(window.Worker);\n  const dictionaryWorker = new Worker(`${publicURL}/workers/dictionary.js`);\n\n  const handleOnChangeTextField = ({ currentTarget: { value } }) => setText(value);\n\n  const handleOnChangeUsernameField = ({ currentTarget: { value } }) => setUsername(value);\n\n  const handleOnClickPasteFromClipBoard = async () => {\n    try {\n      const text = await navigator.clipboard.readText();\n      setText(text);\n    } catch (e) {\n      console.log('Failed to read clipboard');\n    }\n  }\n\n  const handleOnClickProceed = () => { \n    setGameID(nanoid());\n    if (username) {\n      setUser(username);\n    }\n    if (isWindowWorker) {\n      dictionaryWorker.postMessage(text);\n      dictionaryWorker.onmessage = ({ data }) => {\n        setDictionary(data);\n        localStorage.setItem(LOCALSTORAGE_DICTIONARY_KEY, data);\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (gameID) { setGameID(null); }\n    if (dictionary.length > 0) { setDictionary([]); }\n    if (user) { setUser(null); }\n    if (opponent) { setOpponent(null); }\n    if (message) { setMessage(null); }\n  }, []);\n\n  return (\n    <Grid container direction=\"row\" justify=\"center\">\n      <Grid item xs={ 12 } md={ 6 }>\n        <Grid container spacing={ 3 }>\n          <Grid item xs={ 12 }>\n            <h1>Create a new game</h1>\n          </Grid>\n          <Grid item xs={ 12 }>\n            <TextField\n              label=\"Username\"\n              placeholder=\"Put your username here\"\n              fullWidth\n              variant=\"outlined\"\n              value={ username }\n              required={ false }\n              onChange={ handleOnChangeUsernameField }\n            />\n            <TextField\n              label=\"Insert text which will be used as dictionary\"\n              placeholder=\"Put text here\"\n              className={classes.formEl}\n              multiline\n              rows={ 4 }\n              fullWidth\n              variant=\"outlined\"\n              value={ text }\n              required\n              onChange={ handleOnChangeTextField }\n            />\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.formEl}\n              startIcon={<AssignmentIcon />}\n              onClick={ handleOnClickPasteFromClipBoard }\n            >\n              Paste<Hidden xsDown> from clipboard</Hidden>\n            </Button>\n          </Grid>\n          <Grid item xs={ 12 }>\n            <Button component={ Link } disabled={!text} onClick={ handleOnClickProceed } to=\"/invite\" color=\"primary\" variant=\"contained\" size=\"large\">\n              Proceed\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Create;\n","import React, { useContext, createContext, useState } from 'react';\nimport Context from '../context';\nimport { getUsername } from './username';\n\nexport const TYPE = {\n  DICTIONARY: 'dictionary',\n  WELCOME: 'welcome',\n  PLAY: 'play',\n  LEAVE: 'leave',\n};\n\nconst TransportContext = createContext({\n  open: () => {},\n  sendMessage: () => {},\n});\nconst crossBrowserPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection || window.msRTCPeerConnection;\nconst crossBrowserSessionDescription = window.RTCSessionDescription || window.mozRTCSessionDescription || window.webkitRTCSessionDescription || window.msRTCSessionDescription;\nconst config = { \"iceServers\": [ { \"urls\":\"stun:stun.l.google.com:19302\" } ] };\nconst connection = {};\n\nconst TransportProvider = props => {  \n  const { user, setUser, setMessage } = useContext(Context);\n  const [ dataChannel, setDataChannel ] = useState();\n\n  const transport = {\n    open: (gameID) => open(gameID),\n    sendMessage: (message) => sendMessage(message),\n  };\n\n  function sendMessage(message) {\n    if (dataChannel) {\n      dataChannel.send(JSON.stringify(message));\n    }\n  }\n\n  function open(gameID) {\n    return new Promise((resolve, reject) => {\n      var ws = null;\n      var peerConnection;\n      var dataChannel;\n      var username;\n      \n      if (!user) {\n        username = getUsername();\n        setUser(username);\n      } else {\n        username = user;\n      }\n  \n      function openDataChannel() {\n        peerConnection = new crossBrowserPeerConnection(config, connection);\n        peerConnection.onicecandidate = function(e) {\n          if (!peerConnection || !e || !e.candidate) return;\n          var candidate = e.candidate;\n          sendNegotiation('candidate', candidate);\n        }\n  \n        dataChannel = peerConnection.createDataChannel('datachannel', { reliable: false });\n  \n        dataChannel.onopen = function() {\n          console.log('%cdataChannel: opened', 'color: green');\n          setDataChannel(dataChannel);\n          resolve();\n        };\n        dataChannel.onclose = function(){\n          console.log('%cdataChannel: closed', 'color: red');\n        };\n        dataChannel.onerror = function() {\n          console.log('%cdataChannel: error', 'color: red');\n        };\n  \n        peerConnection.ondatachannel = function(ev) {\n          ev.channel.onopen = function() {\n            // Data channel is open and ready to be used\n          };\n          ev.channel.onmessage = function(e) {\n            setMessage(JSON.parse(e.data));\n          };\n          ev.channel.onclose = () => {\n            console.log('%cpeerConnection channel: closed', 'color: red');\n          };\n          ev.channel.onerror = (error) => {\n            console.log('%cpeerConnection channel: error', 'color: red');\n          };\n        };\n  \n        return peerConnection;\n      }\n  \n      function sendNegotiation(type, sdp) {\n        var json = { from: username, gameID: gameID, action: type, data: sdp };\n        ws.send(JSON.stringify(json));\n      }\n  \n      function processOffer(offer) {\n        var peerConnection = openDataChannel();\n        peerConnection.setRemoteDescription(new crossBrowserSessionDescription(offer)).catch(e => {\n          console.log(e);\n        });\n  \n        var sdpConstraints = { 'mandatory': { 'OfferToReceiveAudio': false, 'OfferToReceiveVideo': false } };\n  \n        peerConnection.createAnswer(sdpConstraints).then(function(sdp) {\n          return peerConnection.setLocalDescription(sdp).then(function() {            \n            sendNegotiation('answer', sdp);\n          })\n        }, function(err) {\n          console.log(err);\n        });\n      }\n  \n      function processAnswer(answer) {\n        peerConnection.setRemoteDescription(new crossBrowserSessionDescription(answer));\n      }\n  \n      function processIce(iceCandidate) {\n        peerConnection.addIceCandidate(new RTCIceCandidate(iceCandidate)).catch(e => {\n          debugger\n          console.log(e);\n        })\n      }\n  \n      ws = new WebSocket(props.url);\n      ws.onopen = function(e) {    \n        console.log('%cWebsocket: opened', 'color: gray');\n        \n        openDataChannel();\n  \n        var sdpConstraints = { offerToReceiveAudio: true, offerToReceiveVideo: false };\n        peerConnection.createOffer(sdpConstraints).then(function(sdp) {\n          peerConnection.setLocalDescription(sdp);\n          sendNegotiation('offer', sdp);\n        }, function(err) {\n          console.log(err);\n        });\n      };\n      ws.onclose = function(e) {   \n        console.log('%cWebsocket: closed', 'color: gray');\n      };\n      ws.onerror = function(e) {   \n        console.log('%cWebsocket: error', 'color: red');\n      };\n      ws.onmessage = function(e) {\n        var json = JSON.parse(e.data);\n        if (json.gameID === gameID && json.from !== username) {\n          if (json.action === 'candidate') {\n            processIce(json.data);\n          } else if (json.action === 'offer') {\n            processOffer(json.data);\n          } else if (json.action === 'answer') {\n            processAnswer(json.data);\n          }\n        }\n      };\n    });\n  }\n  \n  return <TransportContext.Provider value={transport} {...props} />;\n}\n\nexport default TransportProvider;\n\nexport const useTransport = () => useContext(TransportContext);\n","import { useState, useContext } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport ShareIcon from '@material-ui/icons/Share';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport DoneIcon from '@material-ui/icons/Done';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport Context from '../context';\nimport { useTransport } from '../helpers/transport-provider';\n\nconst COPY_STATUS = {\n  READY: 'ready',\n  SUCCESS: 'success',\n  FAILURE: 'failure'\n}\n\nconst Invite = () => {\n  const [ copyStatus, setCopyStatus ] = useState(COPY_STATUS.READY);\n  const [ loading, setLoading ] = useState(false);\n  const { gameID } = useContext(Context);\n  const transport = useTransport();\n  const history = useHistory();\n\n  const baseUrl = `${window.location.protocol}//${window.location.host}${window.location.pathname}#`;\n  const gameURL = `${baseUrl}/join/${gameID}`;\n  const gamePath = `/game/${gameID}`;\n\n  const handleOnClickShare = () => {\n    navigator\n      .share({\n        url: `${gameURL}`,\n        title: \"Naughty Board\",\n        text: \"Invite your friend to the game!\"\n      })\n      .then(() => console.log(\"Invite sent!\"))\n      .catch(err => console.log(`${err}`));\n  }\n\n  const handleOnClickCopyToClipboard = () => {\n    if (copyStatus === COPY_STATUS.READY) {\n      try {\n        navigator.clipboard.writeText(gameURL)\n          .then(() => setCopyStatus(COPY_STATUS.SUCCESS))\n          .catch(() => setCopyStatus(COPY_STATUS.FAILURE));\n      } catch (e) {\n        console.log('Failed to write to clipboard');\n      }\n    }\n  }\n  \n  const onJoinClick = () => {\n    setLoading(true);\n    transport.open(gameID).then(() => {\n      history.push(gamePath);\n    }).catch(() => {\n      setLoading(false);\n    });\n  }\n  \n  return (\n    <Grid container direction=\"row\" justify=\"center\">\n      <Grid item xs={ 12 } md={ 6 }>\n        <Grid container spacing={ 3 }>\n          <Grid item xs={ 12 }>\n            <h1>Share link</h1>\n            <p>Share this link with your friend to play together:</p>\n            <code>{`${gameURL}`}</code>\n          </Grid>\n          <Grid item xs={ 12 }>\n            <Grid container>\n              {\n                navigator.clipboard && (\n                  <Grid item xs={ 6 }>\n                    <Button\n                      color=\"secondary\"\n                      variant=\"outlined\"\n                      onClick={ handleOnClickCopyToClipboard }\n                      size=\"large\"\n                      startIcon={copyStatus === COPY_STATUS.READY ? <FileCopyIcon /> : copyStatus === COPY_STATUS.SUCCESS ? <DoneIcon /> : <ClearIcon />}\n                    >\n                      Copy<Hidden xsDown> to cliboard</Hidden>\n                    </Button>\n                  </Grid>\n                )\n              }\n              {\n                navigator.share && (\n                  <Grid item xs={ 6 }>\n                    <Button\n                      color=\"secondary\"\n                      variant=\"outlined\"\n                      onClick={ handleOnClickShare }\n                      size=\"large\"\n                      startIcon={<ShareIcon />}\n                    >\n                      Share\n                    </Button>\n                  </Grid>\n                )\n              }\n            </Grid>\n          </Grid>\n          <Grid item xs={ 6 }>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={ onJoinClick }\n              disabled={ loading }\n              size=\"large\"\n              startIcon={ loading && <CircularProgress size={ 16 } /> }\n            >\n              Start<Hidden xsDown> game</Hidden>\n            </Button>\n          </Grid>\n          <Grid item xs={ 6 }>\n            <Button component={ Link } to=\"/create\" color=\"primary\" variant=\"outlined\" size=\"large\">\n              <Hidden xsDown>Create new game</Hidden>\n              <Hidden smUp>Create</Hidden>\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Invite;\n","import { useState, useEffect, useContext } from 'react';\nimport { useHistory, useParams, Link } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Hidden from '@material-ui/core/Hidden';\nimport TextField from '@material-ui/core/TextField';\nimport Context from '../context';\nimport { useTransport } from '../helpers/transport-provider';\nimport { getUsername } from '../helpers/username';\n\nconst Join = () => {\n  const [ loading, setLoading ] = useState(false);\n  const history = useHistory();\n  const { gameID } = useParams();\n  const { setGameID, setUser } = useContext(Context);\n  const gamePath = `/game/${gameID}`;\n  const transport = useTransport();\n  const [ username, setUsername ] = useState(getUsername());\n\n  const handleOnChangeUsernameField = ({ currentTarget: { value } }) => setUsername(value);\n\n  const onJoinClick = () => {\n    setLoading(true);\n    transport.open(gameID).then(() => {\n      history.push(gamePath);\n    }).catch(() => {\n      setLoading(false);\n    });\n  }\n\n  useEffect(() => {\n    setUser(username);\n  }, [ username ]);\n\n  useEffect(() => {\n    setGameID(gameID);\n  }, [ gameID ]);\n\n  return (\n    <Grid container direction=\"row\" justify=\"center\">\n      <Grid item xs={ 12 } md={ 6 }>\n        <Grid container spacing={ 3 }>\n          <Grid item xs={ 12 }>\n            <h1>Join to the game</h1>\n            <code>Game ID: {gameID}</code>\n          </Grid>\n          <Grid item xs={ 12 }>\n            <TextField\n              label=\"Username\"\n              placeholder=\"Put your username here\"\n              fullWidth\n              variant=\"outlined\"\n              value={ username }\n              required={ false }\n              onChange={ handleOnChangeUsernameField }\n            />\n          </Grid>\n          <Grid item xs={ 6 }>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={ onJoinClick }\n              size=\"large\"\n              disabled={ loading }\n              startIcon={ loading && <CircularProgress size={ 16 } /> }\n            >\n              Join game\n            </Button>\n          </Grid>\n          <Grid item xs={ 6 }>\n            <Button component={ Link } to=\"/create\" color=\"primary\" variant=\"outlined\" size=\"large\">\n              Create<Hidden xsDown> new game</Hidden>\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Join;\n","import get from 'lodash/fp/get';\nimport cn from 'classnames';\nimport './Board.scss';\n\nconst SIZE = 10;\nconst rows = new Array(SIZE).fill({});\nconst cols = new Array(SIZE).fill({});\n\nfunction Board({ fieldsData, onChange, canPlay }) {\n\n  const handleOnFieldChange = (row, col) => ({ currentTarget: { value } }) => {\n    const matchValue = String(value).toUpperCase().match(/([A-Z])/);\n\n    if (matchValue && matchValue.length) {\n      onChange({\n        row,\n        col,\n        letter: matchValue[0]\n      });\n    }\n  }\n\n  return (\n    <div className={ cn(\"board\", { 'board--active': canPlay }) }>\n        { rows.map(( rval, rowIndex) => (\n          <div className='board__row' key={`row-${rowIndex}`}>\n            { cols.map(( cval, colIndex) => {\n              const field = get(`${rowIndex}.${colIndex}`, fieldsData);\n              return (\n                <div className=\"board__col\" key={`col-${colIndex}`}>\n                  { canPlay && !field ? \n                    <input className=\"board__cell\" value='' onChange={handleOnFieldChange(rowIndex, colIndex)} /> :\n                    <div className={ cn(\"board__cell\", field ? {\n                      'board__cell--checked': field.checked,\n                      'board__cell--start-vertical': field.startVertical,\n                      'board__cell--start-horizontal': field.startHorizontal,\n                      'board__cell--end-vertical': field.endVertical,\n                      'board__cell--end-horizontal': field.endHorizontal,\n                      'board__cell--type-vertical': field.vertical,\n                      'board__cell--type-horizontal': field.horizontal,\n                    } : null)}>{ field ? field.value : '' }</div>\n                  }\n                </div>\n              )\n            } ) }\n          </div>\n        )) }\n    </div>\n  );\n}\n\nexport default Board;\n","import Board from './Board.js';\n\nexport default Board;","import React, { useEffect, useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Context from '../../context';\nimport { useTransport, TYPE } from '../../helpers/transport-provider';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    maxHeight: 124,\n    overflow: 'auto',\n  },\n}));\n\nfunction Log() {\n  const classes = useStyles();\n  const { user, opponent, setOpponent, message } = useContext(Context);\n  const transport = useTransport();\n  const [ logs, setLogs ] = useState([]);\n\n  useEffect(() => {\n    if (user) {\n      transport.sendMessage({\n        type: TYPE.WELCOME,\n        data: { user },\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (message) {\n      const { type, data } = message;\n      switch (type) {\n        case (TYPE.WELCOME): {\n          setLogs(prevLogs => [`Opponent ${data.user} joined`, ...prevLogs]);\n          setOpponent(data.user);\n          break;\n        }\n        case (TYPE.PLAY):\n          setLogs(prevLogs => [`${opponent}: ${data.previousStep.letter}`, ...prevLogs]);\n          break;\n        case (TYPE.LEAVE):\n          setLogs(prevLogs => [`${opponent} left the game`, ...prevLogs]);\n          break;\n        default:\n      }\n    }\n  }, [ message ]);\n\n  return (\n    <List className={classes.root} component=\"nav\" dense>\n      {logs.map((log, index) => (\n        <ListItem key={index}>\n          <ListItemText primary={log} />\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n\nexport default Log;\n  ","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Context from '../../context';\n\nconst useStyles = makeStyles({\n  table: {\n    marginBottom: 16,\n    marginTop: 16,\n  },\n});\n\nfunction Scoreboard() {\n  const classes = useStyles();\n  const { user, opponent } = useContext(Context);\n\n  return (\n    <TableContainer component={Paper} className={classes.table}>\n      <Table size=\"small\">\n        <TableBody>\n          <TableRow>\n            <TableCell scope=\"row\">\n              <strong>{user} (me):</strong>\n            </TableCell>\n            <TableCell align=\"right\">\n              <strong>0</strong>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell scope=\"row\">\n              {opponent} (opponent):\n            </TableCell>\n            <TableCell align=\"right\">\n              0\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default Scoreboard;\n  ","import { useContext, useState, useEffect, useMemo } from 'react';\nimport { Redirect, useParams, useHistory } from 'react-router-dom';\nimport set from 'lodash/fp/set';\nimport flow from 'lodash/fp/flow';\nimport cloneDeep from 'lodash/cloneDeep';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport Board from '../components/Board';\nimport Log from '../components/Log';\nimport Scoreboard from '../components/Scoreboard';\nimport Context from '../context';\nimport { useTransport, TYPE } from '../helpers/transport-provider';\n\nconst SIZE = 10;\n\nconst Game = () => {\n  const params = useParams();\n  const { gameID, setGameID, dictionary, setDictionary, user, setUser, publicURL, setOpponent, message } = useContext(Context);\n  const [ fieldsData, setFieldsData ] = useState(\n    new Array(SIZE).fill(\n      new Array(SIZE).fill(null)\n    )\n  );\n  const [ chunks, setChunks ] = useState();\n  const [ canPlay, setCanPlay ] = useState(true);\n  const transport = useTransport();\n  const chunksWorker = new Worker(`${publicURL}/workers/chunks.js`);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (dictionary.length > 0) {\n      transport.sendMessage({\n        type: TYPE.DICTIONARY,\n        data: dictionary,\n      });\n    }\n\n    return () => {\n      chunksWorker.terminate();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (message) {\n      const { type, data } = message;\n      switch (type) {\n        case TYPE.DICTIONARY:\n          setDictionary(data);\n          break;\n        case TYPE.PLAY:\n          setCanPlay(true);\n          setFieldsData(data.fieldsData);\n          break;      \n        default:\n          break;\n      }\n    }\n  }, [ message ]);\n\n  const foundWords = useMemo(() => {\n    if (chunks && chunks.data && chunks.list && dictionary) {\n      return chunks.list.reduce((acc, chunk) => {\n\n        if (dictionary.includes(chunk)) {\n          return {\n            data: {\n              ...acc.data,\n              [chunk]: chunks.data[chunk],\n            },\n            list: [...acc.list, chunk]\n          }\n        }\n\n        return acc;\n      }, {\n        data: {},\n        list: []\n      })\n    }\n    return null;\n  }, [ chunks, dictionary ]);\n\n  useEffect(() => {\n    if (fieldsData) {\n      chunksWorker.postMessage({ fieldsData, foundWords });\n    }\n  }, [ fieldsData ]);\n\n  const fieldsDataEnhanced = useMemo(() => {\n    let res = cloneDeep(fieldsData);\n    if (foundWords && foundWords.list && foundWords.list.length) {\n      Object.values(foundWords.data).forEach((curr) => {\n        const { type, start, end } = curr;\n\n        switch (type) {\n          case 'horizontal':\n            const [ row, startCol ] = start;\n            const [ , endCol ] = end;\n\n            for (let col = startCol; col <= endCol; col++) {\n              if ( col === startCol ) {\n                res = set(`${row}.${col}.startHorizontal`, true, res);\n              } else if ( col === endCol ) {\n                res = set(`${row}.${col}.endHorizontal`, true, res);\n              }\n              res = flow(\n                set(`${row}.${col}.checked`, true),\n                set(`${row}.${col}.horizontal`, true)\n              )(res);\n            }\n            break;\n\n          case 'vertical':\n            const [ startRow, col ] = start;\n            const [ endRow ] = end;\n\n            for (let row = startRow; row <= endRow; row++) {\n              if ( row === startRow ) {\n                res = set(`${row}.${col}.startVertical`, true, res);\n              } else if ( row === endRow ) {\n                res = set(`${row}.${col}.endVertical`, true, res);\n              }\n              res = flow(\n                set(`${row}.${col}.checked`, true),\n                set(`${row}.${col}.vertical`, true)\n              )(res);;\n            }\n            break;\n        \n          default:\n            break;\n        }\n      });\n      return res;\n    }\n    return res;\n  \n  }, [foundWords]);\n\n  if (!gameID && params.gameID) {\n    return <Redirect to={`/join/${params.gameID}`} />\n  }\n\n  const handleOnBoardChange = ({ row, col, letter }) => {\n    const newFieldsData = set(`${row}.${col}.value`, letter, fieldsDataEnhanced || fieldsData);\n    \n    setCanPlay(false);\n    setFieldsData(newFieldsData);\n\n    transport.sendMessage({\n      type: TYPE.PLAY,\n      data: {\n        previousStep: { row, col, letter },\n        fieldsData: newFieldsData\n      }\n    });\n  }\n\n  const handleLeaveClick = () => {\n    transport.sendMessage({\n      type: TYPE.LEAVE,\n    });\n    setGameID(null);\n    setDictionary([]);\n    setUser(null);\n    setOpponent(null);\n    history.push('/');\n  };\n\n  chunksWorker.onmessage = ({ data }) => setChunks(data);\n\n  return (\n    <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\" spacing={ 3 }>\n      <Grid item xs={ 12 } md={ 10 }>\n        <h1>Game ID: <code>{gameID}</code></h1>\n      </Grid>\n      <Grid item xs={ 12 } sm={ 6 }>\n        <Board\n          fieldsData={ fieldsDataEnhanced }\n          onChange={ handleOnBoardChange }\n          canPlay={canPlay}\n        />\n      </Grid>\n      <Grid item xs={ 12 } sm={ 6 } md={ 4 }>\n        <Grid container direction=\"column\" alignItems=\"stretch\">\n          <Grid item xs={ 12 }>\n            <Grid container justify=\"space-between\" alignItems=\"center\">\n              <Grid item>\n                { canPlay ? 'You turn!' : <small>Wait for the opponent...</small> }\n              </Grid>\n              <Grid item>\n              <IconButton aria-label=\"Leave\" component=\"span\" size=\"small\" onClick={ handleLeaveClick }>\n                <ExitToAppIcon />\n              </IconButton>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={ 12 }>\n            <Log />\n          </Grid>\n          <Grid item xs={ 12 }>\n            <Scoreboard />\n          </Grid>\n        </Grid>\n      </Grid>\n      {\n        dictionary && dictionary.length > 0 && (\n          <Grid item xs={ 12 } md={ 10 }>\n            <code>{ dictionary.map((word) => `${word}, `) }</code>\n          </Grid>\n        )\n      }\n    </Grid>\n  );\n}\n\nexport default Game;\n","import React, { useState } from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport Context from './context';\nimport Welcome from './pages/Welcome';\nimport Create from './pages/Create';\nimport Invite from './pages/Invite';\nimport Join from './pages/Join';\nimport Game from './pages/Game';\nimport TransportProvider from './helpers/transport-provider';\nimport './App.css';\n\nfunction App() {\n  const theme = createMuiTheme({\n    palette: {\n      type: 'dark',\n      primary: {\n        light: '#ff7961',\n        main: '#f44336',\n        dark: '#ba000d',\n        contrastText: '#fff',\n      },\n    }\n  });\n  const [ gameID, setGameID ] = useState();\n  const [ dictionary, setDictionary ] = useState([]);\n  const [ user, setUser ] = useState();\n  const [ opponent, setOpponent ] = useState();\n  const [ message, setMessage ] = useState();\n  const WEB_SOCKET_URL = 'wss://ice-server.app.html.wtf';\n\n  return (\n    <Router>\n      <Context.Provider value={{ \n        publicURL: window.publicURL || '', \n        gameID, setGameID, \n        dictionary, setDictionary, \n        user, setUser,\n        opponent, setOpponent,\n        message, setMessage,\n      }}>\n        <TransportProvider url={WEB_SOCKET_URL}>\n          <ThemeProvider theme={theme}>\n            <div className=\"app\">\n              <Switch>\n\n                <Route path=\"/create\">\n                  <Create />\n                </Route>\n\n                <Route path=\"/invite\">\n                  <Invite />\n                </Route>\n\n                <Route path=\"/join/:gameID\">\n                  <Join />\n                </Route>\n\n                <Route path=\"/game/:gameID\">\n                  <Game />\n                </Route>\n              \n                <Route path=\"/\">\n                  <Welcome />\n                </Route>\n\n              </Switch>        \n            </div>\n          </ThemeProvider>\n        </TransportProvider>\n      </Context.Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}