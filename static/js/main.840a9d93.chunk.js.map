{"version":3,"sources":["context.js","icons/AdultsIcon.js","logo.gif","pages/Welcome.jsx","pages/Create.jsx","helpers/transport-provider.js","pages/Invite.jsx","pages/Join.jsx","components/Board/Board.js","components/Board/index.js","components/Log/index.js","components/Scoreboard/index.js","pages/Game.jsx","App.js","reportWebVitals.js","index.js"],"names":["Context","createContext","MenuIcon","props","xmlns","viewBox","width","height","fill","fillRule","stroke","strokeWidth","strokeLinecap","strokeLinejoin","strokeMiterlimit","strokeDasharray","strokeDashoffset","fontFamily","fontWeight","fontSize","textAnchor","d","Welcome","Grid","container","direction","justify","alignItems","item","xs","sm","md","src","logo","className","alt","Button","component","Link","to","color","variant","size","AdultsIcon","useStyles","makeStyles","formEl","marginTop","Create","classes","useState","text","setText","username","setUsername","useContext","setUser","publicURL","setGameID","setDictionary","isWindowWorker","Boolean","window","Worker","dictionaryWorker","handleOnClickPasteFromClipBoard","a","navigator","clipboard","readText","console","log","spacing","TextField","label","placeholder","fullWidth","value","required","onChange","currentTarget","multiline","rows","startIcon","onClick","Hidden","xsDown","disabled","nanoid","postMessage","onmessage","data","TYPE","TransportContext","open","onMessage","sendMessage","crossBrowserPeerConnection","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","msRTCPeerConnection","crossBrowserSessionDescription","RTCSessionDescription","mozRTCSessionDescription","webkitRTCSessionDescription","msRTCSessionDescription","config","connection","DEFAULT_USERNAME","TransportProvider","user","dataChannel","setDataChannel","messageHandlers","setMessageHandlers","message","setMessage","useEffect","forEach","fn","transport","gameID","Promise","resolve","reject","peerConnection","ws","openDataChannel","onicecandidate","e","candidate","sendNegotiation","createDataChannel","reliable","onopen","onclose","onerror","ondatachannel","ev","channel","JSON","parse","error","type","sdp","json","from","action","send","stringify","processOffer","offer","setRemoteDescription","catch","sdpConstraints","createAnswer","then","setLocalDescription","err","processAnswer","answer","processIce","iceCandidate","addIceCandidate","RTCIceCandidate","Math","floor","random","WebSocket","url","offerToReceiveAudio","offerToReceiveVideo","createOffer","prevMessageHandlers","Provider","useTransport","COPY_STATUS","Invite","copyStatus","setCopyStatus","loading","setLoading","history","useHistory","baseUrl","location","protocol","host","pathname","gameURL","gamePath","writeText","share","title","push","CircularProgress","smUp","Join","useParams","Array","cols","Board","fieldsData","canPlay","cn","map","rval","rowIndex","cval","colIndex","row","col","field","get","matchValue","String","toUpperCase","match","length","letter","checked","startVertical","startHorizontal","vertical","horizontal","theme","root","backgroundColor","palette","background","paper","maxHeight","overflow","Log","opponent","setOpponent","logs","setLogs","msg","setTimeout","prevLogs","previousStep","List","dense","index","ListItem","ListItemText","primary","table","marginBottom","Scoreboard","TableContainer","Paper","Table","TableBody","TableRow","TableCell","scope","align","Game","params","dictionary","setFieldsData","chunks","setChunks","setCanPlay","chunksWorker","terminate","foundWords","useMemo","list","reduce","acc","chunk","includes","newFieldsData","set","IconButton","aria-label","word","App","createMuiTheme","light","main","dark","contrastText","ThemeProvider","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSAIeA,EAFCC,0B,kBCWDC,EAXE,SAACC,GAAD,OACf,qBAAKC,MAAM,6BAA6BC,QAAQ,cAAcC,MAAOH,EAAMG,MAAOC,OAAQJ,EAAMI,OAAhG,SACE,oBAAGC,KAAK,OAAOC,SAAS,UAAUC,OAAO,OAAOC,YAAY,IAAIC,cAAc,OAAOC,eAAe,QAAQC,iBAAiB,KAAKC,gBAAgB,GAAGC,iBAAiB,IAAIC,WAAW,OAAOC,WAAW,OAAOC,SAAS,OAAOC,WAAW,OAAzO,UACE,sBAAMC,EAAE,uBAAuBb,KAAK,SACpC,mBAAGA,KAAML,EAAMK,KAAf,SACE,sBAAMa,EAAE,oyCCPD,MAA0B,iCCuB1BC,EAjBC,kBACd,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASC,WAAW,SAA5D,UACE,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAK,GAAKC,GAAK,EAAIC,GAAK,EAAnC,SACE,qBAAKC,IAAKC,EAAMC,UAAU,OAAOC,IAAI,oBAEvC,eAACZ,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAK,GAAKC,GAAK,EAAIC,GAAK,EAAnC,UACE,2DACA,6EACA,cAACK,EAAA,EAAD,CAAQC,UAAYC,IAAOC,GAAG,UAAUC,MAAM,UAAUC,QAAQ,YAAYC,KAAK,QAAjF,6BAGA,yEACA,cAACC,EAAD,CAAYnC,KAAK,UAAUF,MAAO,GAAIC,OAAQ,Y,iFCP9CqC,EAAYC,YAAW,CAC3BC,OAAQ,CACNC,UAAW,MAwFAC,EApFA,WACb,IAAMC,EAAUL,IADG,EAEOM,mBAAS,IAFhB,mBAEXC,EAFW,KAELC,EAFK,OAGeF,mBAAS,IAHxB,mBAGXG,EAHW,KAGDC,EAHC,OAIsCC,qBAAWvD,GAA5DwD,EAJW,EAIXA,QAASC,EAJE,EAIFA,UAAWC,EAJT,EAISA,UAAWC,EAJpB,EAIoBA,cACjCC,EAAiBC,QAAQC,OAAOC,QAChCC,EAAmB,IAAID,OAAJ,UAAcN,EAAd,2BAMnBQ,EAA+B,uCAAG,4BAAAC,EAAA,+EAEjBC,UAAUC,UAAUC,WAFH,OAE9BlB,EAF8B,OAGpCC,EAAQD,GAH4B,gDAKpCmB,QAAQC,IAAI,4BALwB,yDAAH,qDAsBrC,OACE,cAAChD,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAAxC,SACE,cAACH,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAK,GAAKE,GAAK,EAA1B,SACE,eAACR,EAAA,EAAD,CAAMC,WAAS,EAACgD,QAAU,EAA1B,UACE,cAACjD,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAK,GAAhB,SACE,qDAEF,eAACN,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAK,GAAhB,UACE,cAAC4C,EAAA,EAAD,CACEC,MAAM,WACNC,YAAY,yBACZC,WAAS,EACTnC,QAAQ,WACRoC,MAAQxB,EACRyB,UAAW,EACXC,SAvCwB,SAAC,GAAD,IAAoBF,EAApB,EAAGG,cAAiBH,MAApB,OAAkCvB,EAAYuB,MAyCxE,cAACJ,EAAA,EAAD,CACEC,MAAM,+CACNC,YAAY,gBACZzC,UAAWe,EAAQH,OACnBmC,WAAS,EACTC,KAAO,EACPN,WAAS,EACTnC,QAAQ,WACRoC,MAAQ1B,EACR2B,UAAQ,EACRC,SArDoB,SAAC,GAAD,IAAoBF,EAApB,EAAGG,cAAiBH,MAApB,OAAkCzB,EAAQyB,MAuDhE,eAACzC,EAAA,EAAD,CACEK,QAAQ,YACRD,MAAM,YACNN,UAAWe,EAAQH,OACnBqC,UAAW,cAAC,IAAD,IACXC,QAAUnB,EALZ,kBAOO,cAACoB,EAAA,EAAD,CAAQC,QAAM,EAAd,mCAGT,cAAC/D,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAK,GAAhB,SACE,cAACO,EAAA,EAAD,CAAQC,UAAYC,IAAOiD,UAAWpC,EAAMiC,QArDzB,WAC3B1B,EAAU8B,eACNnC,GACFG,EAAQH,GAENO,IACFI,EAAiByB,YAAYtC,GAC7Ba,EAAiB0B,UAAY,YAAe,IAAZC,EAAW,EAAXA,KAC9BhC,EAAcgC,MA6CmEpD,GAAG,UAAUC,MAAM,UAAUC,QAAQ,YAAYC,KAAK,QAAnI,+B,iGCxFCkD,EACC,aADDA,EAEF,UAFEA,EAGL,OAHKA,EAIJ,QAGHC,EAAmB5F,wBAAc,CACrC6F,KAAM,aACNC,UAAW,aACXC,YAAa,eAETC,EAA6BnC,OAAOoC,mBAAqBpC,OAAOqC,sBAAwBrC,OAAOsC,yBAA2BtC,OAAOuC,oBACjIC,EAAiCxC,OAAOyC,uBAAyBzC,OAAO0C,0BAA4B1C,OAAO2C,6BAA+B3C,OAAO4C,wBACjJC,EAAS,CAAE,WAAc,CAAE,CAAE,KAAO,kCACpCC,EAAa,GACbC,EAAmB,QAgKVC,EA9JW,SAAA3G,GAAU,IAAD,EACPoD,qBAAWvD,GAA7B+G,EADyB,EACzBA,KAAMvD,EADmB,EACnBA,QADmB,EAEON,qBAFP,mBAEzB8D,EAFyB,KAEZC,EAFY,OAGe/D,mBAAS,IAHxB,mBAGzBgE,EAHyB,KAGRC,EAHQ,OAIDjE,qBAJC,mBAIzBkE,EAJyB,KAIhBC,EAJgB,KAMjCC,qBAAU,WACJF,IACFF,EAAgBK,SAAQ,SAACC,GACnBA,GACFA,EAAGJ,MAGPC,EAAW,SAEZ,CAAED,IAEL,IAAMK,EAAY,CAChB3B,KAAM,SAAC4B,GAAD,OAeR,SAAcA,GACZ,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IACIC,EACAd,EACA3D,EAHA0E,EAAK,KAYT,SAASC,IAqCP,OApCAF,EAAiB,IAAI7B,EAA2BU,EAAQC,IACzCqB,eAAiB,SAASC,GAClCJ,GAAmBI,GAAMA,EAAEC,WAEhCC,EAAgB,YADAF,EAAEC,aAIpBnB,EAAcc,EAAeO,kBAAkB,cAAe,CAAEC,UAAU,KAE9DC,OAAS,WACnBjE,QAAQC,IAAI,wBAAyB,gBACrC0C,EAAeD,GACfY,KAEFZ,EAAYwB,QAAU,WACpBlE,QAAQC,IAAI,wBAAyB,eAEvCyC,EAAYyB,QAAU,WACpBnE,QAAQC,IAAI,uBAAwB,eAGtCuD,EAAeY,cAAgB,SAASC,GACtCA,EAAGC,QAAQL,OAAS,aAGpBI,EAAGC,QAAQlD,UAAY,SAASwC,GAC9Bb,EAAWwB,KAAKC,MAAMZ,EAAEvC,QAE1BgD,EAAGC,QAAQJ,QAAU,WACnBlE,QAAQC,IAAI,mCAAoC,eAElDoE,EAAGC,QAAQH,QAAU,SAACM,GACpBzE,QAAQC,IAAI,kCAAmC,gBAI5CuD,EAGT,SAASM,EAAgBY,EAAMC,GAC7B,IAAIC,EAAO,CAAEC,KAAM9F,EAAUqE,OAAQA,EAAQ0B,OAAQJ,EAAMrD,KAAMsD,GACjElB,EAAGsB,KAAKR,KAAKS,UAAUJ,IAGzB,SAASK,EAAaC,GACpB,IAAI1B,EAAiBE,IACrBF,EAAe2B,qBAAqB,IAAInD,EAA+BkD,IAAQE,OAAM,SAAAxB,GACnF5D,QAAQC,IAAI2D,MAGd,IAAIyB,EAAiB,CAAE,UAAa,CAAE,qBAAuB,EAAO,qBAAuB,IAE3F7B,EAAe8B,aAAaD,GAAgBE,MAAK,SAASZ,GACxD,OAAOnB,EAAegC,oBAAoBb,GAAKY,MAAK,WAClDzB,EAAgB,SAAUa,SAE3B,SAASc,GACVzF,QAAQC,IAAIwF,MAIhB,SAASC,EAAcC,GACrBnC,EAAe2B,qBAAqB,IAAInD,EAA+B2D,IAGzE,SAASC,EAAWC,GAClBrC,EAAesC,gBAAgB,IAAIC,gBAAgBF,IAAeT,OAAM,SAAAxB,GAEtE5D,QAAQC,IAAI2D,MA5EXnB,EAIH1D,EAAW0D,GAHX1D,EAAQ,UAAMwD,EAAN,YAA0ByD,KAAKC,MAAsB,IAAhBD,KAAKE,WAClDhH,EAAQH,KA8EV0E,EAAK,IAAI0C,UAAUtK,EAAMuK,MACtBnC,OAAS,SAASL,GACnB5D,QAAQC,IAAI,sBAAuB,eAEnCyD,IAEA,IAAI2B,EAAiB,CAAEgB,qBAAqB,EAAMC,qBAAqB,GACvE9C,EAAe+C,YAAYlB,GAAgBE,MAAK,SAASZ,GACvDnB,EAAegC,oBAAoBb,GACnCb,EAAgB,QAASa,MACxB,SAASc,GACVzF,QAAQC,IAAIwF,OAGhBhC,EAAGS,QAAU,SAASN,GACpB5D,QAAQC,IAAI,sBAAuB,gBAErCwD,EAAGU,QAAU,SAASP,GACpB5D,QAAQC,IAAI,qBAAsB,eAEpCwD,EAAGrC,UAAY,SAASwC,GACtB,IAAIgB,EAAOL,KAAKC,MAAMZ,EAAEvC,MACpBuD,EAAKxB,SAAWA,GAAUwB,EAAKC,OAAS9F,IACtB,cAAhB6F,EAAKE,OACPc,EAAWhB,EAAKvD,MACS,UAAhBuD,EAAKE,OACdG,EAAaL,EAAKvD,MACO,WAAhBuD,EAAKE,QACdY,EAAcd,EAAKvD,WAlITG,CAAK4B,IACvB3B,UAAW,SAACyB,GAAD,OAIb,SAAmBA,GACjBL,GAAmB,SAAA2D,GAAmB,4BAAQA,GAAR,CAA6BtD,OALhDzB,CAAUyB,IAC7BxB,YAAa,SAACoB,GAAD,OAOf,SAAqBA,GACfJ,GACFA,EAAYqC,KAAKR,KAAKS,UAAUlC,IATRpB,CAAYoB,KAuIxC,OAAO,cAACvB,EAAiBkF,SAAlB,aAA2BlG,MAAO4C,GAAetH,KAK7C6K,EAAe,kBAAMzH,qBAAWsC,ICxKvCoF,EACG,QADHA,GAEK,UAFLA,GAGK,UAiHIC,GA9GA,WAAO,IAAD,EACmBhI,mBAAS+H,GAD5B,mBACXE,EADW,KACCC,EADD,OAEalI,oBAAS,GAFtB,mBAEXmI,EAFW,KAEFC,EAFE,KAGX5D,EAAWnE,qBAAWvD,GAAtB0H,OACFD,EAAYuD,IACZO,EAAUC,cAEVC,EAAO,UAAM3H,OAAO4H,SAASC,SAAtB,aAAmC7H,OAAO4H,SAASE,MAAnD,OAA0D9H,OAAO4H,SAASG,SAA1E,KACPC,EAAO,UAAML,EAAN,iBAAsB/D,GAC7BqE,EAAQ,gBAAYrE,GAkC1B,OACE,cAACnG,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAAxC,SACE,cAACH,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAK,GAAKE,GAAK,EAA1B,SACE,eAACR,EAAA,EAAD,CAAMC,WAAS,EAACgD,QAAU,EAA1B,UACE,eAACjD,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAK,GAAhB,UACE,4CACA,mFACA,yCAAUiK,QAEZ,cAACvK,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAK,GAAhB,SACE,eAACN,EAAA,EAAD,CAAMC,WAAS,EAAf,UAEI2C,UAAUC,WACR,cAAC7C,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAK,EAAhB,SACE,eAACO,EAAA,EAAD,CACEI,MAAM,YACNC,QAAQ,WACR2C,QAtCiB,WACnC,GAAI+F,IAAeF,EACjB,IACE9G,UAAUC,UAAU4H,UAAUF,GAC3BjC,MAAK,kBAAMuB,EAAcH,OACzBvB,OAAM,kBAAM0B,EAAcH,OAC7B,MAAO/C,GACP5D,QAAQC,IAAI,kCAgCE7B,KAAK,QACLyC,UAAWgG,IAAeF,EAAoB,cAAC,IAAD,IAAmBE,IAAeF,GAAsB,cAAC,IAAD,IAAe,cAAC,IAAD,IALvH,iBAOM,cAAC5F,EAAA,EAAD,CAAQC,QAAM,EAAd,+BAMVnB,UAAU8H,OACR,cAAC1K,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAK,EAAhB,SACE,cAACO,EAAA,EAAD,CACEI,MAAM,YACNC,QAAQ,WACR2C,QAhEO,WACzBjB,UACG8H,MAAM,CACLvB,IAAI,GAAD,OAAKoB,GACRI,MAAO,gBACP/I,KAAM,oCAEP0G,MAAK,kBAAMvF,QAAQC,IAAI,mBACvBmF,OAAM,SAAAK,GAAG,OAAIzF,QAAQC,IAAR,UAAewF,QAyDbrH,KAAK,QACLyC,UAAW,cAAC,IAAD,IALb,0BAcV,cAAC5D,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAK,EAAhB,SACE,eAACO,EAAA,EAAD,CACEI,MAAM,UACNC,QAAQ,YACR2C,QAxDQ,WAClBkG,GAAW,GACX7D,EAAU3B,KAAK4B,GAAQmC,MAAK,WAC1B0B,EAAQY,KAAKJ,MACZrC,OAAM,WACP4B,GAAW,OAoDH/F,SAAW8F,EACX3I,KAAK,QACLyC,UAAYkG,GAAW,cAACe,EAAA,EAAD,CAAkB1J,KAAO,KANlD,kBAQO,cAAC2C,EAAA,EAAD,CAAQC,QAAM,EAAd,wBAGT,cAAC/D,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAK,EAAhB,SACE,eAACO,EAAA,EAAD,CAAQC,UAAYC,IAAOC,GAAG,UAAUC,MAAM,UAAUC,QAAQ,WAAWC,KAAK,QAAhF,UACE,cAAC2C,EAAA,EAAD,CAAQC,QAAM,EAAd,6BACA,cAACD,EAAA,EAAD,CAAQgH,MAAI,EAAZ,iCCxCCC,GAtEF,WAAO,IAAD,EACepJ,oBAAS,GADxB,mBACTmI,EADS,KACAC,EADA,KAEXC,EAAUC,cACR9D,EAAW6E,cAAX7E,OAHS,EAIcnE,qBAAWvD,GAAlC0D,EAJS,EAITA,UAAWF,EAJF,EAIEA,QACbuI,EAAQ,gBAAYrE,GACpBD,EAAYuD,IAND,EAOiB9H,mBAAS,IAP1B,mBAOTG,EAPS,KAOCC,EAPD,KA4BjB,OARAgE,qBAAU,WACR9D,EAAQH,KACP,CAAEA,IAELiE,qBAAU,WACR5D,EAAUgE,KACT,CAAEA,IAGH,cAACnG,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAAxC,SACE,cAACH,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAK,GAAKE,GAAK,EAA1B,SACE,eAACR,EAAA,EAAD,CAAMC,WAAS,EAACgD,QAAU,EAA1B,UACE,eAACjD,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAK,GAAhB,UACE,kDACA,6CAAgB6F,QAElB,cAACnG,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAK,GAAhB,SACE,cAAC4C,EAAA,EAAD,CACEC,MAAM,WACNC,YAAY,yBACZC,WAAS,EACTnC,QAAQ,WACRoC,MAAQxB,EACRyB,UAAW,EACXC,SAnCwB,SAAC,GAAD,IAAoBF,EAApB,EAAGG,cAAiBH,MAApB,OAAkCvB,EAAYuB,QAsC1E,cAACtD,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAK,EAAhB,SACE,cAACO,EAAA,EAAD,CACEK,QAAQ,YACRD,MAAM,UACN4C,QAxCQ,WAClBkG,GAAW,GACX7D,EAAU3B,KAAK4B,GAAQmC,MAAK,WAC1B0B,EAAQY,KAAKJ,MACZrC,OAAM,WACP4B,GAAW,OAoCH5I,KAAK,QACL6C,SAAW8F,EACXlG,UAAYkG,GAAW,cAACe,EAAA,EAAD,CAAkB1J,KAAO,KANlD,yBAWF,cAACnB,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAK,EAAhB,SACE,eAACO,EAAA,EAAD,CAAQC,UAAYC,IAAOC,GAAG,UAAUC,MAAM,UAAUC,QAAQ,WAAWC,KAAK,QAAhF,mBACQ,cAAC2C,EAAA,EAAD,CAAQC,QAAM,EAAd,oC,gHClEdJ,I,OAAO,IAAIsH,MADJ,IACgBhM,KAAK,KAC5BiM,GAAO,IAAID,MAFJ,IAEgBhM,KAAK,IA2CnBkM,IC/CAA,GDMf,YAAmD,IAAlCC,EAAiC,EAAjCA,WAAY5H,EAAqB,EAArBA,SAAU6H,EAAW,EAAXA,QAcrC,OACE,qBAAK1K,UAAY2K,KAAG,QAAS,CAAE,gBAAiBD,IAAhD,SACM1H,GAAK4H,KAAI,SAAEC,EAAMC,GAAR,OACT,qBAAK9K,UAAU,aAAf,SACIuK,GAAKK,KAAI,SAAEG,EAAMC,GACjB,IAjBiBC,EAAKC,EAiBhBC,EAAQC,KAAI,GAAD,OAAIN,EAAJ,YAAgBE,GAAYP,GAC7C,OACE,qBAAKzK,UAAU,aAAf,SACI0K,IAAYS,EACZ,uBAAOnL,UAAU,cAAc2C,MAAM,GAAGE,UArB7BoI,EAqB2DH,EArBtDI,EAqBgEF,EArBxD,YAAmC,IAAfrI,EAAc,EAA/BG,cAAiBH,MACtD0I,EAAaC,OAAO3I,GAAO4I,cAAcC,MAAM,WAEjDH,GAAcA,EAAWI,QAC3B5I,EAAS,CACPoI,MACAC,MACAQ,OAAQL,EAAW,SAeP,qBAAKrL,UAAY2K,KAAG,cAAeQ,EAAQ,CACzC,uBAAwBA,EAAMQ,QAC9B,8BAA+BR,EAAMS,cACrC,gCAAiCT,EAAMU,gBACvC,6BAA8BV,EAAMW,SACpC,+BAAgCX,EAAMY,YACpC,MANJ,SAMaZ,EAAQA,EAAMxI,MAAQ,MATvC,cAAwCqI,QAJ9C,cAAwCF,U,8BEjB5CpK,GAAYC,aAAW,SAACqL,GAAD,MAAY,CACvCC,KAAM,CACJC,gBAAiBF,EAAMG,QAAQC,WAAWC,MAC1CC,UAAW,IACXC,SAAU,YAsDCC,OAlDf,WACE,IAAMzL,EAAUL,KADH,EAE2BW,qBAAWvD,GAA3C+G,EAFK,EAELA,KAAM4H,EAFD,EAECA,SAAUC,EAFX,EAEWA,YAClBnH,EAAYuD,IAHL,EAIa9H,mBAAS,IAJtB,mBAIL2L,EAJK,KAICC,EAJD,OAKmB5L,qBALnB,mBAKLkE,EALK,KAKIC,EALJ,KAuCb,OAhCAC,qBAAU,WACRG,EAAU1B,WAAU,SAACgJ,GACnB1H,EAAW0H,MAEbC,YAAW,WACTvH,EAAUzB,YAAY,CACpBgD,KAAMpD,EACND,KAAM,CAAEoB,YAET,OACF,IAEHO,qBAAU,WACR,GAAIF,EAAS,CAAC,IACJ4B,EAAe5B,EAAf4B,KAAMrD,EAASyB,EAATzB,KACd,OAAQqD,GACN,KAAMpD,EACJkJ,GAAQ,SAAAG,GAAQ,0BAAiBtJ,EAAKoB,KAAtB,+BAAwCkI,OACxDL,EAAYjJ,EAAKoB,MACjB,MAEF,KAAMnB,EACJkJ,GAAQ,SAAAG,GAAQ,iBAAQN,EAAR,aAAqBhJ,EAAKuJ,aAAatB,SAAvC,mBAAoDqB,OACpE,MACF,KAAMrJ,EACJkJ,GAAQ,SAAAG,GAAQ,iBAAQN,EAAR,sCAAqCM,WAK1D,CAAE7H,IAGH,cAAC+H,GAAA,EAAD,CAAMjN,UAAWe,EAAQkL,KAAM9L,UAAU,MAAM+M,OAAK,EAApD,SACGP,EAAK/B,KAAI,SAACvI,EAAK8K,GAAN,OACR,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAcC,QAASjL,KADV8K,S,4DChDjBzM,GAAYC,YAAW,CAC3B4M,MAAO,CACLC,aAAc,GACd3M,UAAW,MAkCA4M,OA9Bf,WACE,IAAM1M,EAAUL,KADI,EAEOW,qBAAWvD,GAA9B+G,EAFY,EAEZA,KAAM4H,EAFM,EAENA,SAEd,OACE,cAACiB,GAAA,EAAD,CAAgBvN,UAAWwN,KAAO3N,UAAWe,EAAQwM,MAArD,SACE,cAACK,GAAA,EAAD,CAAOpN,KAAK,QAAZ,SACE,eAACqN,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWC,MAAM,MAAjB,SACE,mCAASnJ,EAAT,eAEF,cAACkJ,GAAA,EAAD,CAAWE,MAAM,QAAjB,SACE,4CAGJ,eAACH,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAWC,MAAM,MAAjB,UACGvB,EADH,aAGA,cAACsB,GAAA,EAAD,CAAWE,MAAM,QAAjB,0BCyLGC,GA9MF,WACX,IAAMC,EAAS9D,cADE,EAE+EhJ,qBAAWvD,GAAnG0H,EAFS,EAETA,OAAQhE,EAFC,EAEDA,UAAW4M,EAFV,EAEUA,WAAY3M,EAFtB,EAEsBA,cAAeoD,EAFrC,EAEqCA,KAAMvD,EAF3C,EAE2CA,QAASC,EAFpD,EAEoDA,UAAWmL,EAF/D,EAE+DA,YAF/D,EAGqB1L,mBACpC,IAAIsJ,MANK,IAMOhM,KACd,IAAIgM,MAPG,IAOShM,KAAK,QALR,mBAGTmM,EAHS,KAGG4D,EAHH,OAQarN,qBARb,mBAQTsN,EARS,KAQDC,EARC,OASevN,oBAAS,GATxB,mBAST0J,EATS,KASA8D,EATA,KAUXjJ,EAAYuD,IACZ2F,EAAe,IAAI5M,OAAJ,UAAcN,EAAd,uBACf8H,EAAUC,cAEhBlE,qBAAU,WAsBR,OArBAG,EAAU1B,WAAU,YAAqB,IAAlBiD,EAAiB,EAAjBA,KAAMrD,EAAW,EAAXA,KAC3B,OAAQqD,GACN,KAAKpD,EACHjC,EAAcgC,GACd,MACF,KAAKC,EACH8K,GAAW,GACXH,EAAc5K,EAAKgH,gBAOrB2D,GACF7I,EAAUzB,YAAY,CACpBgD,KAAMpD,EACND,KAAM2K,IAIH,WACLK,EAAaC,eAEd,IAEHtJ,qBAAU,WACJqF,IACFrI,QAAQC,IAAI,YAAaoI,GACzBgE,EAAalL,YAAY,CAAEkH,kBAE5B,CAAEA,IAEL,IAAMkE,EAAaC,mBAAQ,WACzB,OAAIN,GAAUA,EAAO7K,MAAQ6K,EAAOO,MAAQT,EACnCE,EAAOO,KAAKC,QAAO,SAACC,EAAKC,GAE9B,OAAIZ,EAAWa,SAASD,GACf,CACLvL,KAAK,2BACAsL,EAAItL,MADL,mBAEDuL,EAAQV,EAAO7K,KAAKuL,KAEvBH,KAAK,GAAD,mBAAME,EAAIF,MAAV,CAAgBG,KAIjBD,IACN,CACDtL,KAAM,GACNoL,KAAM,KAGH,OACN,CAAEP,EAAQF,IAqDb,IAAK5I,GAAU2I,EAAO3I,OACpB,OAAO,cAAC,IAAD,CAAUnF,GAAE,gBAAW8N,EAAO3I,UAmCvC,OANAiJ,EAAajL,UAAY,gBAAGC,EAAH,EAAGA,KAAH,OAAc8K,EAAU9K,IAEjDrB,QAAQC,IAAI,SAAUiM,GACtBlM,QAAQC,IAAI,aAAcsM,GAIxB,eAACtP,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASC,WAAW,aAAa6C,QAAU,EAAnF,UACE,eAACjD,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAK,GAAKE,GAAK,GAA1B,UACE,2CAAa,+BAAO2F,OACpB,uCAAS,+BAAOX,UAElB,cAACxF,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAK,GAAKC,GAAK,EAA1B,SACE,cAAC,GAAD,CACE6K,WAAaA,EACb5H,SAzCoB,SAAC,GAA0B,IAAxBoI,EAAuB,EAAvBA,IAAKC,EAAkB,EAAlBA,IAAKQ,EAAa,EAAbA,OACjCwD,EAAgBC,KAAI,GAAD,OAAIlE,EAAJ,YAAWC,EAAX,UAAwBQ,EAAQjB,GAEzD+D,GAAW,GACXH,EAAca,GAEd3J,EAAUzB,YAAY,CACpBgD,KAAMpD,EACND,KAAM,CACJuJ,aAAc,CAAE/B,MAAKC,MAAKQ,UAC1BjB,WAAYyE,MAgCVxE,QAASA,MAGb,cAACrL,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAK,GAAKC,GAAK,EAAIC,GAAK,EAAnC,SACE,eAACR,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASE,WAAW,UAA9C,UACE,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAK,GAAhB,SACE,eAACN,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAQ,gBAAgBC,WAAW,SAAnD,UACE,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAAV,SACIgL,EAAU,YAAc,+DAE5B,cAACrL,EAAA,EAAD,CAAMK,MAAI,EAAV,SACA,cAAC0P,GAAA,EAAD,CAAYC,aAAW,QAAQlP,UAAU,OAAOK,KAAK,QAAQ0C,QAtChD,WACvBqC,EAAUzB,YAAY,CACpBgD,KAAMpD,IAERlC,EAAU,MACVC,EAAc,IACdH,EAAQ,MACRoL,EAAY,MACZrD,EAAQY,KAAK,MA8BH,SACE,cAAC,KAAD,aAKN,cAAC9G,EAAA,EAAD,CAAQC,QAAM,EAAd,SACE,cAAC/D,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAK,GAAhB,SACE,cAAC,GAAD,QAGJ,cAACN,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAK,GAAhB,SACE,cAAC,GAAD,WAKJyO,GAAcA,EAAW3C,OAAS,GAChC,cAACpM,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAK,GAAKE,GAAK,GAA1B,SACE,+BAAQuO,EAAWxD,KAAI,SAAC0E,GAAD,gBAAaA,EAAb,iB,OCzIpBC,OA7Df,WACE,IAAMvD,EAAQwD,YAAe,CAC3BrD,QAAS,CACPrF,KAAM,OACNwG,QAAS,CACPmC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,WARP,EAYiB5O,qBAZjB,mBAYLwE,EAZK,KAYGhE,EAZH,OAayBR,qBAbzB,mBAaLoN,EAbK,KAaO3M,EAbP,OAcaT,qBAdb,mBAcL6D,EAdK,KAcCvD,EAdD,OAeqBN,qBAfrB,mBAeLyL,EAfK,KAeKC,EAfL,KAkBb,OACE,cAAC,IAAD,UACE,cAAC,EAAQ7D,SAAT,CAAkBlG,MAAO,CACvBpB,UAAWK,OAAOL,WAAa,GAC/BiE,SAAQhE,YACR4M,aAAY3M,gBACZoD,OAAMvD,UACNmL,WAAUC,eALZ,SAOE,cAAC,EAAD,CAAmBlE,IAXF,gCAWjB,SACE,cAACqH,EAAA,EAAD,CAAe7D,MAAOA,EAAtB,SACE,qBAAKhM,UAAU,MAAf,SACE,eAAC,IAAD,WAEE,cAAC,IAAD,CAAO8P,KAAK,UAAZ,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACE,cAAC,GAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,gBAAZ,SACE,cAAC,GAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,gBAAZ,SACE,cAAC,GAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,oBCrDHC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBtI,MAAK,YAAkD,IAA/CuI,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.840a9d93.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst Context = createContext();\n\nexport default Context;\n","import React from 'react';\n\nconst MenuIcon = (props) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 172 172\" width={props.width} height={props.height}>\n    <g fill=\"none\" fillRule=\"nonzero\" stroke=\"none\" strokeWidth=\"1\" strokeLinecap=\"butt\" strokeLinejoin=\"miter\" strokeMiterlimit=\"10\" strokeDasharray=\"\" strokeDashoffset=\"0\" fontFamily=\"none\" fontWeight=\"none\" fontSize=\"none\" textAnchor=\"none\">\n      <path d=\"M0,172v-172h172v172z\" fill=\"none\" />\n      <g fill={props.fill}>\n        <path d=\"M86,6.88c-43.65603,0 -79.12,35.46397 -79.12,79.12c0,43.65603 35.46397,79.12 79.12,79.12c43.65603,0 79.12,-35.46397 79.12,-79.12c0,-43.65603 -35.46397,-79.12 -79.12,-79.12zM86,13.76c39.93779,0 72.24,32.30221 72.24,72.24c0,39.93779 -32.30221,72.24 -72.24,72.24c-39.93779,0 -72.24,-32.30221 -72.24,-72.24c0,-39.93779 32.30221,-72.24 72.24,-72.24zM85.40875,58.48c-12.36336,0 -15.88985,8.83214 -15.88985,13.8339c0,6.76992 5.2997,10.29592 7.65266,11.18c-2.94464,1.17648 -9.41969,4.4154 -9.41969,13.53828c0,7.65056 4.71151,16.4811 18.54375,16.4811c5.2976,0 17.9525,-2.64886 17.9525,-16.4811c0,-9.41872 -6.47827,-12.6542 -9.71531,-13.53828c2.06056,-0.88064 7.35703,-4.41008 7.35703,-11.18c0,-2.6488 -0.8807,-13.8339 -16.4811,-13.8339zM53.32,59.34c-1.47232,8.24912 -7.22744,9.84947 -15.48,10.14531v5.30109l13.76,0.0336v37.84h6.88v-53.32zM85.70437,64.36563c7.9464,0 9.12406,5.5951 9.12406,8.2439c0,2.94464 -1.47028,8.82844 -8.82844,8.82844c-9.12288,0 -9.71204,-7.35612 -9.7086,-8.82844c0,-1.17992 0.58249,-8.2439 9.41297,-8.2439zM123.84,72.24v10.32h-10.32v6.88h10.32v10.32h6.88v-10.32h10.32v-6.88h-10.32v-10.32zM86,87.02797c8.83048,0 11.18672,7.9536 11.18672,10.30656c0,5.00176 -3.82856,10.58875 -11.18672,10.58875c-5.59344,0 -11.48235,-2.93475 -11.48235,-10.58875c0,-4.41696 2.94771,-10.30656 11.48235,-10.30656z\" />\n      </g>\n    </g>\n  </svg>\n);\n\nexport default MenuIcon;\n","export default __webpack_public_path__ + \"static/media/logo.6ba9428e.gif\";","import { Link } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport AdultsIcon from '../icons/AdultsIcon';\nimport logo from '../logo.gif';\n\nconst Welcome = () => (\n  <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n    <Grid item xs={ 12 } sm={ 6 } md={ 5 }>\n      <img src={logo} className=\"logo\" alt=\"Naughty Board\" />\n    </Grid>\n    <Grid item xs={ 12 } sm={ 6 } md={ 5 }>\n      <h1>Welcome to Naughty Board!</h1>\n      <p>Press the button below to create a new game.</p>\n      <Button component={ Link } to=\"/create\" color=\"primary\" variant=\"contained\" size=\"large\">\n        Create new game\n      </Button>\n      <p>To join an existed game you need a link.</p>\n      <AdultsIcon fill=\"#E74C3C\" width={48} height={48} />\n    </Grid>\n  </Grid>\n);\n\nexport default Welcome;\n","import { useState, useContext } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { nanoid } from 'nanoid';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Context from '../context';\n\nconst useStyles = makeStyles({\n  formEl: {\n    marginTop: 16,\n  },\n});\n\nconst Create = () => {\n  const classes = useStyles();\n  const [ text, setText ] = useState('');\n  const [ username, setUsername ] = useState('');\n  const { setUser, publicURL, setGameID, setDictionary } = useContext(Context);\n  const isWindowWorker = Boolean(window.Worker);\n  const dictionaryWorker = new Worker(`${publicURL}/workers/dictionary.js`);\n\n  const handleOnChangeTextField = ({ currentTarget: { value } }) => setText(value);\n\n  const handleOnChangeUsernameField = ({ currentTarget: { value } }) => setUsername(value);\n\n  const handleOnClickPasteFromClipBoard = async () => {\n    try {\n      const text = await navigator.clipboard.readText();\n      setText(text);\n    } catch (e) {\n      console.log('Failed to read clipboard');\n    }\n  }\n\n  const handleOnClickProceed = () => { \n    setGameID(nanoid());\n    if (username) {\n      setUser(username);\n    }\n    if (isWindowWorker) {\n      dictionaryWorker.postMessage(text);\n      dictionaryWorker.onmessage = ({ data }) => {\n        setDictionary(data);\n      }\n    }\n  }\n\n  return (\n    <Grid container direction=\"row\" justify=\"center\">\n      <Grid item xs={ 12 } md={ 6 }>\n        <Grid container spacing={ 3 }>\n          <Grid item xs={ 12 }>\n            <h1>Create a new game</h1>\n          </Grid>\n          <Grid item xs={ 12 }>\n            <TextField\n              label=\"Username\"\n              placeholder=\"Put your username here\"\n              fullWidth\n              variant=\"outlined\"\n              value={ username }\n              required={ false }\n              onChange={ handleOnChangeUsernameField }\n            />\n            <TextField\n              label=\"Insert text which will be used as dictionary\"\n              placeholder=\"Put text here\"\n              className={classes.formEl}\n              multiline\n              rows={ 4 }\n              fullWidth\n              variant=\"outlined\"\n              value={ text }\n              required\n              onChange={ handleOnChangeTextField }\n            />\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.formEl}\n              startIcon={<AssignmentIcon />}\n              onClick={ handleOnClickPasteFromClipBoard }\n            >\n              Paste<Hidden xsDown> from clipboard</Hidden>\n            </Button>\n          </Grid>\n          <Grid item xs={ 12 }>\n            <Button component={ Link } disabled={!text} onClick={ handleOnClickProceed } to=\"/invite\" color=\"primary\" variant=\"contained\" size=\"large\">\n              Proceed\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Create;\n","import React, { useContext, createContext, useEffect, useState } from 'react';\nimport Context from '../context';\n\nexport const TYPE = {\n  DICTIONARY: 'dictionary',\n  WELCOME: 'welcome',\n  PLAY: 'play',\n  LEAVE: 'LEAVE',\n};\n\nconst TransportContext = createContext({\n  open: () => {},\n  onMessage: () => {},\n  sendMessage: () => {},\n});\nconst crossBrowserPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection || window.msRTCPeerConnection;\nconst crossBrowserSessionDescription = window.RTCSessionDescription || window.mozRTCSessionDescription || window.webkitRTCSessionDescription || window.msRTCSessionDescription;\nconst config = { \"iceServers\": [ { \"urls\":\"stun:stun.l.google.com:19302\" } ] };\nconst connection = {};\nconst DEFAULT_USERNAME = 'Alice';\n\nconst TransportProvider = props => {  \n  const { user, setUser } = useContext(Context);\n  const [ dataChannel, setDataChannel ] = useState();\n  const [ messageHandlers, setMessageHandlers ] = useState([]);\n  const [ message, setMessage ] = useState();\n\n  useEffect(() => {\n    if (message) {\n      messageHandlers.forEach((fn) => {\n        if (fn) {\n          fn(message);\n        }\n      });\n      setMessage(null);\n    }\n  }, [ message ]);\n\n  const transport = {\n    open: (gameID) => open(gameID),\n    onMessage: (fn) => onMessage(fn),\n    sendMessage: (message) => sendMessage(message),\n  };\n\n  function onMessage(fn) {\n    setMessageHandlers(prevMessageHandlers => [...prevMessageHandlers, fn]);\n  }\n\n  function sendMessage(message) {\n    if (dataChannel) {\n      dataChannel.send(JSON.stringify(message));\n    }\n  }\n\n  function open(gameID) {\n    return new Promise((resolve, reject) => {\n      var ws = null;\n      var peerConnection;\n      var dataChannel;\n      var username;\n      \n      if (!user) {\n        username = `${DEFAULT_USERNAME}_${Math.floor(Math.random() * 1000000)}`;\n        setUser(username);\n      } else {\n        username = user;\n      }\n  \n      function openDataChannel() {\n        peerConnection = new crossBrowserPeerConnection(config, connection);\n        peerConnection.onicecandidate = function(e) {\n          if (!peerConnection || !e || !e.candidate) return;\n          var candidate = e.candidate;\n          sendNegotiation('candidate', candidate);\n        }\n  \n        dataChannel = peerConnection.createDataChannel('datachannel', { reliable: false });\n  \n        dataChannel.onopen = function() {\n          console.log('%cdataChannel: opened', 'color: green');\n          setDataChannel(dataChannel);\n          resolve();\n        };\n        dataChannel.onclose = function(){\n          console.log('%cdataChannel: closed', 'color: red');\n        };\n        dataChannel.onerror = function() {\n          console.log('%cdataChannel: error', 'color: red');\n        };\n  \n        peerConnection.ondatachannel = function(ev) {\n          ev.channel.onopen = function() {\n            // Data channel is open and ready to be used\n          };\n          ev.channel.onmessage = function(e) {\n            setMessage(JSON.parse(e.data));\n          };\n          ev.channel.onclose = () => {\n            console.log('%cpeerConnection channel: closed', 'color: red');\n          };\n          ev.channel.onerror = (error) => {\n            console.log('%cpeerConnection channel: error', 'color: red');\n          };\n        };\n  \n        return peerConnection;\n      }\n  \n      function sendNegotiation(type, sdp) {\n        var json = { from: username, gameID: gameID, action: type, data: sdp };\n        ws.send(JSON.stringify(json));\n      }\n  \n      function processOffer(offer) {\n        var peerConnection = openDataChannel();\n        peerConnection.setRemoteDescription(new crossBrowserSessionDescription(offer)).catch(e => {\n          console.log(e);\n        });\n  \n        var sdpConstraints = { 'mandatory': { 'OfferToReceiveAudio': false, 'OfferToReceiveVideo': false } };\n  \n        peerConnection.createAnswer(sdpConstraints).then(function(sdp) {\n          return peerConnection.setLocalDescription(sdp).then(function() {            \n            sendNegotiation('answer', sdp);\n          })\n        }, function(err) {\n          console.log(err);\n        });\n      }\n  \n      function processAnswer(answer) {\n        peerConnection.setRemoteDescription(new crossBrowserSessionDescription(answer));\n      }\n  \n      function processIce(iceCandidate) {\n        peerConnection.addIceCandidate(new RTCIceCandidate(iceCandidate)).catch(e => {\n          debugger\n          console.log(e);\n        })\n      }\n  \n      ws = new WebSocket(props.url);\n      ws.onopen = function(e) {    \n        console.log('%cWebsocket: opened', 'color: gray');\n        \n        openDataChannel();\n  \n        var sdpConstraints = { offerToReceiveAudio: true, offerToReceiveVideo: false };\n        peerConnection.createOffer(sdpConstraints).then(function(sdp) {\n          peerConnection.setLocalDescription(sdp);\n          sendNegotiation('offer', sdp);\n        }, function(err) {\n          console.log(err);\n        });\n      };\n      ws.onclose = function(e) {   \n        console.log('%cWebsocket: closed', 'color: gray');\n      };\n      ws.onerror = function(e) {   \n        console.log('%cWebsocket: error', 'color: red');\n      };\n      ws.onmessage = function(e) {\n        var json = JSON.parse(e.data);\n        if (json.gameID === gameID && json.from !== username) {\n          if (json.action === 'candidate') {\n            processIce(json.data);\n          } else if (json.action === 'offer') {\n            processOffer(json.data);\n          } else if (json.action === 'answer') {\n            processAnswer(json.data);\n          }\n        }\n      };\n    });\n  }\n  \n  return <TransportContext.Provider value={transport} {...props} />;\n}\n\nexport default TransportProvider;\n\nexport const useTransport = () => useContext(TransportContext);\n","import { useState, useContext } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport ShareIcon from '@material-ui/icons/Share';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport DoneIcon from '@material-ui/icons/Done';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport Context from '../context';\nimport { useTransport } from '../helpers/transport-provider';\n\nconst COPY_STATUS = {\n  READY: 'ready',\n  SUCCESS: 'success',\n  FAILURE: 'failure'\n}\n\nconst Invite = () => {\n  const [ copyStatus, setCopyStatus ] = useState(COPY_STATUS.READY);\n  const [ loading, setLoading ] = useState(false);\n  const { gameID } = useContext(Context);\n  const transport = useTransport();\n  const history = useHistory();\n\n  const baseUrl = `${window.location.protocol}//${window.location.host}${window.location.pathname}#`;\n  const gameURL = `${baseUrl}/join/${gameID}`;\n  const gamePath = `/game/${gameID}`;\n\n  const handleOnClickShare = () => {\n    navigator\n      .share({\n        url: `${gameURL}`,\n        title: \"Naughty Board\",\n        text: \"Invite your friend to the game!\"\n      })\n      .then(() => console.log(\"Invite sent!\"))\n      .catch(err => console.log(`${err}`));\n  }\n\n  const handleOnClickCopyToClipboard = () => {\n    if (copyStatus === COPY_STATUS.READY) {\n      try {\n        navigator.clipboard.writeText(gameURL)\n          .then(() => setCopyStatus(COPY_STATUS.SUCCESS))\n          .catch(() => setCopyStatus(COPY_STATUS.FAILURE));\n      } catch (e) {\n        console.log('Failed to write to clipboard');\n      }\n    }\n  }\n  \n  const onJoinClick = () => {\n    setLoading(true);\n    transport.open(gameID).then(() => {\n      history.push(gamePath);\n    }).catch(() => {\n      setLoading(false);\n    });\n  }\n  \n  return (\n    <Grid container direction=\"row\" justify=\"center\">\n      <Grid item xs={ 12 } md={ 6 }>\n        <Grid container spacing={ 3 }>\n          <Grid item xs={ 12 }>\n            <h1>Share link</h1>\n            <p>Share this link with your friend to play together:</p>\n            <code>{`${gameURL}`}</code>\n          </Grid>\n          <Grid item xs={ 12 }>\n            <Grid container>\n              {\n                navigator.clipboard && (\n                  <Grid item xs={ 6 }>\n                    <Button\n                      color=\"secondary\"\n                      variant=\"outlined\"\n                      onClick={ handleOnClickCopyToClipboard }\n                      size=\"large\"\n                      startIcon={copyStatus === COPY_STATUS.READY ? <FileCopyIcon /> : copyStatus === COPY_STATUS.SUCCESS ? <DoneIcon /> : <ClearIcon />}\n                    >\n                      Copy<Hidden xsDown> to cliboard</Hidden>\n                    </Button>\n                  </Grid>\n                )\n              }\n              {\n                navigator.share && (\n                  <Grid item xs={ 6 }>\n                    <Button\n                      color=\"secondary\"\n                      variant=\"outlined\"\n                      onClick={ handleOnClickShare }\n                      size=\"large\"\n                      startIcon={<ShareIcon />}\n                    >\n                      Share\n                    </Button>\n                  </Grid>\n                )\n              }\n            </Grid>\n          </Grid>\n          <Grid item xs={ 6 }>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={ onJoinClick }\n              disabled={ loading }\n              size=\"large\"\n              startIcon={ loading && <CircularProgress size={ 16 } /> }\n            >\n              Start<Hidden xsDown> game</Hidden>\n            </Button>\n          </Grid>\n          <Grid item xs={ 6 }>\n            <Button component={ Link } to=\"/create\" color=\"primary\" variant=\"outlined\" size=\"large\">\n              <Hidden xsDown>Create new game</Hidden>\n              <Hidden smUp>Create</Hidden>\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Invite;\n","import { useState, useEffect, useContext } from 'react';\nimport { useHistory, useParams, Link } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Hidden from '@material-ui/core/Hidden';\nimport TextField from '@material-ui/core/TextField';\nimport Context from '../context';\nimport { useTransport } from '../helpers/transport-provider';\n\nconst Join = () => {\n  const [ loading, setLoading ] = useState(false);\n  const history = useHistory();\n  const { gameID } = useParams();\n  const { setGameID, setUser } = useContext(Context);\n  const gamePath = `/game/${gameID}`;\n  const transport = useTransport();\n  const [ username, setUsername ] = useState('');\n\n  const handleOnChangeUsernameField = ({ currentTarget: { value } }) => setUsername(value);\n\n  const onJoinClick = () => {\n    setLoading(true);\n    transport.open(gameID).then(() => {\n      history.push(gamePath);\n    }).catch(() => {\n      setLoading(false);\n    });\n  }\n\n  useEffect(() => {\n    setUser(username);\n  }, [ username ]);\n\n  useEffect(() => {\n    setGameID(gameID);\n  }, [ gameID ]);\n\n  return (\n    <Grid container direction=\"row\" justify=\"center\">\n      <Grid item xs={ 12 } md={ 6 }>\n        <Grid container spacing={ 3 }>\n          <Grid item xs={ 12 }>\n            <h1>Join to the game</h1>\n            <code>Game ID: {gameID}</code>\n          </Grid>\n          <Grid item xs={ 12 }>\n            <TextField\n              label=\"Username\"\n              placeholder=\"Put your username here\"\n              fullWidth\n              variant=\"outlined\"\n              value={ username }\n              required={ false }\n              onChange={ handleOnChangeUsernameField }\n            />\n          </Grid>\n          <Grid item xs={ 6 }>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={ onJoinClick }\n              size=\"large\"\n              disabled={ loading }\n              startIcon={ loading && <CircularProgress size={ 16 } /> }\n            >\n              Join game\n            </Button>\n          </Grid>\n          <Grid item xs={ 6 }>\n            <Button component={ Link } to=\"/create\" color=\"primary\" variant=\"outlined\" size=\"large\">\n              Create<Hidden xsDown> new game</Hidden>\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Join;\n","import get from 'lodash/fp/get';\nimport cn from 'classnames';\nimport './Board.scss';\n\nconst SIZE = 10;\nconst rows = new Array(SIZE).fill({});\nconst cols = new Array(SIZE).fill({});\n\nfunction Board({ fieldsData, onChange, canPlay }) {\n\n  const handleOnFieldChange = (row, col) => ({ currentTarget: { value } }) => {\n    const matchValue = String(value).toUpperCase().match(/([A-Z])/);\n\n    if (matchValue && matchValue.length) {\n      onChange({\n        row,\n        col,\n        letter: matchValue[0]\n      });\n    }\n  }\n\n  return (\n    <div className={ cn(\"board\", { 'board--active': canPlay }) }>\n        { rows.map(( rval, rowIndex) => (\n          <div className='board__row' key={`row-${rowIndex}`}>\n            { cols.map(( cval, colIndex) => {\n              const field = get(`${rowIndex}.${colIndex}`, fieldsData);\n              return (\n                <div className=\"board__col\" key={`col-${colIndex}`}>\n                  { canPlay && !field ? \n                    <input className=\"board__cell\" value='' onChange={handleOnFieldChange(rowIndex, colIndex)} /> :\n                    <div className={ cn(\"board__cell\", field ? {\n                      'board__cell--checked': field.checked,\n                      'board__cell--start-vertical': field.startVertical,\n                      'board__cell--start-horizontal': field.startHorizontal,\n                      'board__cell--type-vertical': field.vertical,\n                      'board__cell--type-horizontal': field.horizontal,\n                    } : null)}>{ field ? field.value : '' }</div>\n                  }\n                </div>\n              )\n            } ) }\n          </div>\n        )) }\n    </div>\n  );\n}\n\nexport default Board;\n","import Board from './Board.js';\n\nexport default Board;","import React, { useEffect, useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Context from '../../context';\nimport { useTransport, TYPE } from '../../helpers/transport-provider';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    maxHeight: 124,\n    overflow: 'auto',\n  },\n}));\n\nfunction Log() {\n  const classes = useStyles();\n  const { user, opponent, setOpponent } = useContext(Context);\n  const transport = useTransport();\n  const [ logs, setLogs ] = useState([]);\n  const [ message, setMessage ] = useState();\n\n  useEffect(() => {\n    transport.onMessage((msg) => {\n      setMessage(msg)\n    });\n    setTimeout(() => {\n      transport.sendMessage({\n        type: TYPE.WELCOME,\n        data: { user },\n      });\n    }, 1000);\n  }, []);\n\n  useEffect(() => {\n    if (message) {\n      const { type, data } = message;\n      switch (type) {\n        case (TYPE.WELCOME): {\n          setLogs(prevLogs => [`Opponent ${data.user} joined`, ...prevLogs]);\n          setOpponent(data.user);\n          break;\n        }\n        case (TYPE.PLAY):\n          setLogs(prevLogs => [`${opponent}: ${data.previousStep.letter}`, ...prevLogs]);\n          break;\n        case (TYPE.LEAVE):\n          setLogs(prevLogs => [`${opponent} left the game`, ...prevLogs]);\n          break;\n        default:\n      }\n    }\n  }, [ message ]);\n\n  return (\n    <List className={classes.root} component=\"nav\" dense>\n      {logs.map((log, index) => (\n        <ListItem key={index}>\n          <ListItemText primary={log} />\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n\nexport default Log;\n  ","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Context from '../../context';\n\nconst useStyles = makeStyles({\n  table: {\n    marginBottom: 16,\n    marginTop: 16,\n  },\n});\n\nfunction Scoreboard() {\n  const classes = useStyles();\n  const { user, opponent } = useContext(Context);\n\n  return (\n    <TableContainer component={Paper} className={classes.table}>\n      <Table size=\"small\">\n        <TableBody>\n          <TableRow>\n            <TableCell scope=\"row\">\n              <strong>{user} score:</strong>\n            </TableCell>\n            <TableCell align=\"right\">\n              <strong>0</strong>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell scope=\"row\">\n              {opponent} score:\n            </TableCell>\n            <TableCell align=\"right\">\n              0\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default Scoreboard;\n  ","import { useContext, useState, useEffect, useMemo } from 'react';\nimport { Redirect, useParams, useHistory } from 'react-router-dom';\nimport set from 'lodash/fp/set';\nimport flow from 'lodash/fp/flow';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport Board from '../components/Board';\nimport Log from '../components/Log';\nimport Scoreboard from '../components/Scoreboard';\nimport Context from '../context';\nimport { useTransport, TYPE } from '../helpers/transport-provider';\n\nconst SIZE = 10;\n\nconst Game = () => {\n  const params = useParams();\n  const { gameID, setGameID, dictionary, setDictionary, user, setUser, publicURL, setOpponent } = useContext(Context);\n  const [ fieldsData, setFieldsData ] = useState(\n    new Array(SIZE).fill(\n      new Array(SIZE).fill(null)\n    )\n  );\n  const [ chunks, setChunks ] = useState();\n  const [ canPlay, setCanPlay ] = useState(true)\n  const transport = useTransport();\n  const chunksWorker = new Worker(`${publicURL}/workers/chunks.js`);\n  const history = useHistory();\n\n  useEffect(() => {\n    transport.onMessage(({ type, data }) => {\n      switch (type) {\n        case TYPE.DICTIONARY:\n          setDictionary(data);\n          break;\n        case TYPE.PLAY:\n          setCanPlay(true);\n          setFieldsData(data.fieldsData);\n          break;      \n        default:\n          break;\n      }\n    });\n\n    if (dictionary) {\n      transport.sendMessage({\n        type: TYPE.DICTIONARY,\n        data: dictionary,\n      });\n    };\n\n    return () => {\n      chunksWorker.terminate();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (fieldsData) {\n      console.log('useEffect', fieldsData);\n      chunksWorker.postMessage({ fieldsData });\n    }\n  }, [ fieldsData ]);\n\n  const foundWords = useMemo(() => {\n    if (chunks && chunks.data && chunks.list && dictionary) {\n      return chunks.list.reduce((acc, chunk) => {\n\n        if (dictionary.includes(chunk)) {\n          return {\n            data: {\n              ...acc.data,\n              [chunk]: chunks.data[chunk],\n            },\n            list: [...acc.list, chunk]\n          }\n        }\n\n        return acc;\n      }, {\n        data: {},\n        list: []\n      })\n    }\n    return null;\n  }, [ chunks, dictionary ]);\n\n  //const fieldsDataEnhanced = useMemo(() => {\n  //  let res = [ ...fieldsData ];\n  //  if (foundWords && foundWords.list && foundWords.list.length) {\n  //    Object.values(foundWords.data).forEach((curr) => {\n  //      const { type, start, end } = curr;\n//\n  //      switch (type) {\n  //        case 'horizontal':\n  //          const [ row, startCol ] = start;\n  //          const [ , endCol ] = end;\n//\n  //          for (let col = startCol; col <= endCol; col++) {\n  //            if ( col === startCol ) {\n  //              res = set(`${row}.${col}.startHorizontal`, true, res);\n  //            } else if ( col === endCol ) {\n  //              res = set(`${row}.${col}.endHorizontal`, true, res);\n  //            }\n  //            res = flow(\n  //              set(`${row}.${col}.checked`, true),\n  //              set(`${row}.${col}.horizontal`, true)\n  //            )(res);\n  //          }\n  //          break;\n//\n  //        case 'vertical':\n  //          const [ startRow, col ] = start;\n  //          const [ endRow ] = end;\n//\n  //          for (let row = startRow; row <= endRow; row++) {\n  //            if ( row === startRow ) {\n  //              res = set(`${row}.${col}.startVertical`, true, res);\n  //            } else if ( row === endRow ) {\n  //              res = set(`${row}.${col}.endVertical`, true, res);\n  //            }\n  //            res = flow(\n  //              set(`${row}.${col}.checked`, true),\n  //              set(`${row}.${col}.vertical`, true)\n  //            )(res);;\n  //          }\n  //          break;\n  //      \n  //        default:\n  //          break;\n  //      }\n  //    });\n  //    setFieldsData(res);\n  //  }\n  //  return res;\n  //\n  //}, [foundWords]);\n\n  if (!gameID && params.gameID) {\n    return <Redirect to={`/join/${params.gameID}`} />\n  }\n\n  const handleOnBoardChange = ({ row, col, letter }) => {\n    const newFieldsData = set(`${row}.${col}.value`, letter, fieldsData);\n    \n    setCanPlay(false);\n    setFieldsData(newFieldsData);\n\n    transport.sendMessage({\n      type: TYPE.PLAY,\n      data: {\n        previousStep: { row, col, letter },\n        fieldsData: newFieldsData\n      }\n    });\n  }\n\n  const handleLeaveClick = () => {\n    transport.sendMessage({\n      type: TYPE.LEAVE,\n    });\n    setGameID(null);\n    setDictionary([]);\n    setUser(null);\n    setOpponent(null);\n    history.push('/');\n  };\n\n  chunksWorker.onmessage = ({ data }) => setChunks(data);\n\n  console.log('chunks', chunks);\n  console.log('foundWords', foundWords);\n  // console.log('fieldsDataEnhanced', fieldsDataEnhanced);\n\n  return (\n    <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\" spacing={ 3 }>\n      <Grid item xs={ 12 } md={ 10 }>\n        <h1>Game ID: <code>{gameID}</code></h1>\n        <p>user: <code>{user}</code></p>\n      </Grid>\n      <Grid item xs={ 12 } sm={ 6 }>\n        <Board\n          fieldsData={ fieldsData }\n          onChange={ handleOnBoardChange }\n          canPlay={canPlay}\n        />\n      </Grid>\n      <Grid item xs={ 12 } sm={ 6 } md={ 4 }>\n        <Grid container direction=\"column\" alignItems=\"stretch\">\n          <Grid item xs={ 12 }>\n            <Grid container justify=\"space-between\" alignItems=\"center\">\n              <Grid item>\n                { canPlay ? 'You turn!' : <small>Wait for the opponent...</small> }\n              </Grid>\n              <Grid item>\n              <IconButton aria-label=\"Leave\" component=\"span\" size=\"small\" onClick={ handleLeaveClick }>\n                <ExitToAppIcon />\n              </IconButton>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Hidden xsDown>\n            <Grid item xs={ 12 }>\n              <Log />\n            </Grid>\n          </Hidden>\n          <Grid item xs={ 12 }>\n            <Scoreboard />\n          </Grid>\n        </Grid>\n      </Grid>\n      {\n        dictionary && dictionary.length > 0 && (\n          <Grid item xs={ 12 } md={ 10 }>\n            <code>{ dictionary.map((word) => `${word}, `) }</code>\n          </Grid>\n        )\n      }\n    </Grid>\n  );\n}\n\nexport default Game;\n","import React, { useState } from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport Context from './context';\nimport Welcome from './pages/Welcome';\nimport Create from './pages/Create';\nimport Invite from './pages/Invite';\nimport Join from './pages/Join';\nimport Game from './pages/Game';\nimport TransportProvider from './helpers/transport-provider';\nimport './App.css';\n\nfunction App() {\n  const theme = createMuiTheme({\n    palette: {\n      type: 'dark',\n      primary: {\n        light: '#ff7961',\n        main: '#f44336',\n        dark: '#ba000d',\n        contrastText: '#fff',\n      },\n    }\n  });\n  const [ gameID, setGameID ] = useState();\n  const [ dictionary, setDictionary ] = useState();\n  const [ user, setUser ] = useState();\n  const [ opponent, setOpponent ] = useState();\n  const WEB_SOCKET_URL = 'wss://ice-server.app.html.wtf';\n\n  return (\n    <Router>\n      <Context.Provider value={{ \n        publicURL: window.publicURL || '', \n        gameID, setGameID, \n        dictionary, setDictionary, \n        user, setUser,\n        opponent, setOpponent\n      }}>\n        <TransportProvider url={WEB_SOCKET_URL}>\n          <ThemeProvider theme={theme}>\n            <div className=\"app\">\n              <Switch>\n\n                <Route path=\"/create\">\n                  <Create />\n                </Route>\n\n                <Route path=\"/invite\">\n                  <Invite />\n                </Route>\n\n                <Route path=\"/join/:gameID\">\n                  <Join />\n                </Route>\n\n                <Route path=\"/game/:gameID\">\n                  <Game />\n                </Route>\n              \n                <Route path=\"/\">\n                  <Welcome />\n                </Route>\n\n              </Switch>        \n            </div>\n          </ThemeProvider>\n        </TransportProvider>\n      </Context.Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}