{"version":3,"sources":["context.js","pages/Welcome.jsx","pages/Create.jsx","helpers/transport-provider.js","pages/Invite.jsx","pages/Join.jsx","components/Board/Board.js","components/Board/index.js","components/Log/index.js","components/Scoreboard/index.js","components/Controls/index.js","pages/Game.jsx","App.js","reportWebVitals.js","index.js"],"names":["Context","createContext","Welcome","Button","component","Link","to","color","variant","size","Create","useState","text","setText","useContext","publicURL","setGameID","setDictionary","isWindowWorker","Boolean","window","Worker","dictionary","handleOnClickPasteFromClipBoard","a","navigator","clipboard","readText","console","log","Grid","container","spacing","item","xs","TextField","label","placeholder","multiline","rows","fullWidth","value","onChange","currentTarget","startIcon","onClick","Hidden","xsDown","disabled","nanoid","postMessage","onmessage","data","TYPE","TransportContext","open","onMessage","sendMessage","crossBrowserPeerConnection","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","msRTCPeerConnection","crossBrowserSessionDescription","RTCSessionDescription","mozRTCSessionDescription","webkitRTCSessionDescription","msRTCSessionDescription","config","connection","DEFAULT_NAME","TransportProvider","props","setUser","dataChannel","setDataChannel","messageHandlers","setMessageHandlers","message","setMessage","useEffect","forEach","fn","transport","gameID","Promise","resolve","reject","peerConnection","ws","user","Math","floor","random","openDataChannel","onicecandidate","e","candidate","sendNegotiation","createDataChannel","reliable","onopen","onclose","onerror","ondatachannel","ev","channel","JSON","parse","type","sdp","json","from","action","send","stringify","processOffer","offer","setRemoteDescription","catch","sdpConstraints","createAnswer","then","setLocalDescription","err","processAnswer","answer","processIce","iceCandidate","addIceCandidate","RTCIceCandidate","WebSocket","url","offerToReceiveAudio","offerToReceiveVideo","createOffer","prevMessageHandlers","Provider","useTransport","COPY_STATUS","Invite","copyStatus","setCopyStatus","loading","setLoading","history","useHistory","baseUrl","location","protocol","host","pathname","gameURL","gamePath","writeText","share","title","push","CircularProgress","smUp","Join","useParams","Array","fill","cols","Board","fieldsData","canPlay","className","cn","map","rval","rowIndex","cval","colIndex","row","col","get","matchValue","String","toUpperCase","match","length","letter","useStyles","makeStyles","theme","root","backgroundColor","palette","background","paper","maxHeight","overflow","Log","classes","logs","setLogs","prevLogs","previousStep","setTimeout","List","index","ListItem","ListItemText","primary","Scoreboard","TableContainer","Paper","Table","aria-label","TableBody","TableRow","TableCell","scope","align","btn","fontSize","margin","Controls","IconButton","Game","params","setFieldsData","setCanPlay","sm","newFieldsData","set","direction","alignItems","word","App","createMuiTheme","light","main","dark","contrastText","ThemeProvider","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8db5b3c9.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst Context = createContext();\n\nexport default Context;\n","import { Link } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\n\nconst Welcome = () => (\n  <div>\n    <h1>Welcome to Naughty Scrabble!</h1>\n    <p>Press the button below to create a new game.</p>\n    <Button component={ Link } to=\"/create\" color=\"primary\" variant=\"contained\" size=\"large\">\n      Create new game\n    </Button>\n    <p>To join an existed game you need a link.</p>\n  </div>\n);\n\nexport default Welcome;\n","import { useState, useContext } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { nanoid } from 'nanoid';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport Context from '../context';\n\nconst Create = () => {\n  const [ text, setText ] = useState('');\n  const { publicURL, setGameID, setDictionary } = useContext(Context);\n  const isWindowWorker = Boolean(window.Worker);\n  const dictionary = new Worker(`${publicURL}/workers/dictionary.js`);\n\n  const handleOnChangeTextField = ({currentTarget: {value}}) => setText(value)\n\n  const handleOnClickPasteFromClipBoard = async () => {\n    try {\n      const text = await navigator.clipboard.readText();\n      setText(text);\n    } catch (e) {\n      console.log('Failed to read clipboard');\n    }\n  }\n\n  const handleOnClickProceed = () => { \n    setGameID(nanoid());\n    if (isWindowWorker) {\n      dictionary.postMessage(text);\n      dictionary.onmessage = function({ data }) {\n        setDictionary(data);\n      }\n    }\n  }\n\n  return (\n    <div>\n      <h1>Create a new game</h1>\n      <Grid container spacing={ 3 }>\n        <Grid item xs={ 6 }>\n          <TextField\n            label=\"Insert text which will be used as dictionary\"\n            placeholder=\"Put you text here\"\n            multiline\n            rows={ 4 }\n            fullWidth\n            variant=\"outlined\"\n            value={ text }\n            onChange={ handleOnChangeTextField }\n          />\n        </Grid>\n        <Grid item xs={ 6 }>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            startIcon={<AssignmentIcon />}\n            onClick={ handleOnClickPasteFromClipBoard }\n          >\n            Paste<Hidden xsDown> from clipboard</Hidden>\n          </Button>\n        </Grid>\n        <Grid item xs={ 12 }>\n          <Button component={ Link } disabled={!text} onClick={ handleOnClickProceed } to=\"/invite\" color=\"primary\" variant=\"contained\" size=\"large\">\n            Proceed\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Create;\n","import React, { useContext, createContext, useEffect, useState } from 'react';\nimport Context from '../context';\n\nexport const TYPE = {\n  DICTIONARY: 'dictionary',\n  MESSAGE: 'message',\n  PLAY: 'play',\n  LEAVE: 'LEAVE',\n};\n\nconst TransportContext = createContext({\n  open: () => {},\n  onMessage: () => {},\n  sendMessage: () => {},\n});\nconst crossBrowserPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection || window.msRTCPeerConnection;\nconst crossBrowserSessionDescription = window.RTCSessionDescription || window.mozRTCSessionDescription || window.webkitRTCSessionDescription || window.msRTCSessionDescription;\nconst config = { \"iceServers\": [ { \"urls\":\"stun:stun.l.google.com:19302\" } ] };\nconst connection = {};\nconst DEFAULT_NAME = 'Alice';\n\nconst TransportProvider = props => {  \n  const {\n    setUser\n  } = useContext(Context);\n  const [ dataChannel, setDataChannel ] = useState();\n  const [ messageHandlers, setMessageHandlers ] = useState([]);\n  const [ message, setMessage ] = useState();\n\n  useEffect(() => {\n    if (message) {\n      messageHandlers.forEach((fn) => {\n        if (fn) {\n          fn(message);\n        }\n      });\n      setMessage(null);\n    }\n  }, [ message ]);\n\n  const transport = {\n    open: (gameID) => open(gameID),\n    onMessage: (fn) => onMessage(fn),\n    sendMessage: (message) => sendMessage(message),\n  };\n\n  function onMessage(fn) {\n    console.log('messageHandlers', messageHandlers);\n    setMessageHandlers(prevMessageHandlers => [...prevMessageHandlers, fn]);\n  }\n\n  function sendMessage(message) {\n    if (dataChannel) {\n      dataChannel.send(JSON.stringify(message));\n    }\n  }\n\n  function open(gameID) {\n    return new Promise((resolve, reject) => {\n      var ws = null;\n      var peerConnection;\n      var dataChannel;\n      var user = `${DEFAULT_NAME}_${Math.floor(Math.random() * 10000)}`;\n  \n      function openDataChannel() {\n        peerConnection = new crossBrowserPeerConnection(config, connection);\n        peerConnection.onicecandidate = function(e) {\n          if (!peerConnection || !e || !e.candidate) return;\n          var candidate = e.candidate;\n          sendNegotiation('candidate', candidate);\n        }\n  \n        dataChannel = peerConnection.createDataChannel('datachannel', { reliable: false });\n  \n        dataChannel.onopen = function() {\n          console.log('%cDATACHANNEL OPENED', 'color: green');\n          setUser(user);\n          setDataChannel(dataChannel);\n          resolve();\n        };\n        dataChannel.onclose = function(){\n          console.log('%cDATACHANNEL CLOSED', 'color: red');\n        };\n        dataChannel.onerror = function() {\n          console.log('%cDATACHANNEL ERROR', 'color: red');\n        };\n  \n        peerConnection.ondatachannel = function(ev) {\n          ev.channel.onopen = function() {\n            // Data channel is open and ready to be used\n          };\n          ev.channel.onmessage = function(e) {\n            setMessage(JSON.parse(e.data));\n          };\n        };\n  \n        return peerConnection;\n      }\n  \n      function sendNegotiation(type, sdp) {\n        var json = { from: user, gameID: gameID, action: type, data: sdp };\n        ws.send(JSON.stringify(json));\n      }\n  \n      function processOffer(offer) {\n        var peerConnection = openDataChannel();\n        peerConnection.setRemoteDescription(new crossBrowserSessionDescription(offer)).catch(e => {\n          console.log(e);\n        });\n  \n        var sdpConstraints = { 'mandatory': { 'OfferToReceiveAudio': false, 'OfferToReceiveVideo': false } };\n  \n        peerConnection.createAnswer(sdpConstraints).then(function(sdp) {\n          return peerConnection.setLocalDescription(sdp).then(function() {            \n            sendNegotiation(\"answer\", sdp);\n          })\n        }, function(err) {\n          console.log(err);\n        });\n      }\n  \n      function processAnswer(answer) {\n        peerConnection.setRemoteDescription(new crossBrowserSessionDescription(answer));\n      }\n  \n      function processIce(iceCandidate) {\n        peerConnection.addIceCandidate(new RTCIceCandidate(iceCandidate)).catch(e => {\n          debugger\n          console.log(e);\n        })\n      }\n  \n      ws = new WebSocket(props.url);\n      ws.onopen = function(e) {    \n        console.log('%cWebsocket opened', 'color: gray');\n        \n        openDataChannel();\n  \n        var sdpConstraints = { offerToReceiveAudio: true, offerToReceiveVideo: false };\n        peerConnection.createOffer(sdpConstraints).then(function(sdp) {\n          peerConnection.setLocalDescription(sdp);\n          sendNegotiation(\"offer\", sdp);\n        }, function(err) {\n          console.log(err);\n        });\n      };\n      ws.onclose = function(e) {   \n        console.log('%cWebsocket closed', 'color: gray');\n      };\n      ws.onerror = function(e) {   \n        console.log('%cWebsocket error', 'color: red');\n      };\n      ws.onmessage = function(e) {\n        var json = JSON.parse(e.data);\n        if (json.gameID === gameID && json.from !== user) {\n          if (json.action === 'candidate') {\n            processIce(json.data);\n          } else if (json.action === 'offer') {\n            processOffer(json.data);\n          } else if (json.action === 'answer') {\n            processAnswer(json.data);\n          }\n        }\n      };\n    });\n  }\n  \n  return <TransportContext.Provider value={transport} {...props} />;\n}\n\nexport default TransportProvider;\n\nexport const useTransport = () => useContext(TransportContext);\n","import { useState, useContext } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport ShareIcon from '@material-ui/icons/Share';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport DoneIcon from '@material-ui/icons/Done';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport Context from '../context';\nimport { useTransport } from '../helpers/transport-provider';\n\nconst COPY_STATUS = {\n  READY: 'ready',\n  SUCCESS: 'success',\n  FAILURE: 'failure'\n}\n\nconst Invite = () => {\n  const [ copyStatus, setCopyStatus ] = useState(COPY_STATUS.READY);\n  const [ loading, setLoading ] = useState(false);\n  const { gameID } = useContext(Context);\n  const transport = useTransport();\n  const history = useHistory();\n\n  const baseUrl = `${window.location.protocol}//${window.location.host}${window.location.pathname}#`;\n  const gameURL = `${baseUrl}/join/${gameID}`;\n  const gamePath = `/game/${gameID}`;\n\n  const handleOnClickShare = () => {\n    navigator\n      .share({\n        url: `${gameURL}`,\n        title: \"SCRABBLE\",\n        text: \"Invite your friend to the game!\"\n      })\n      .then(() => console.log(\"Invite sent!\"))\n      .catch(err => console.log(`${err}`));\n  }\n\n  const handleOnClickCopyToClipboard = () => {\n    if (copyStatus === COPY_STATUS.READY) {\n      try {\n        navigator.clipboard.writeText(gameURL)\n          .then(() => setCopyStatus(COPY_STATUS.SUCCESS))\n          .catch(() => setCopyStatus(COPY_STATUS.FAILURE));\n      } catch (e) {\n        console.log('Failed to write to clipboard');\n      }\n    }\n  }\n  \n  const onJoinClick = () => {\n    setLoading(true);\n    transport.open(gameID).then(() => {\n      history.push(gamePath);\n    }).catch(() => {\n      setLoading(false);\n    });\n  }\n  \n  return (\n    <div>\n      <h1>Share link</h1>\n      <p>Share this link with your friend to play together:</p>\n      <Grid container spacing={ 3 }>\n        <Grid item xs={ 12 }>\n          <code>{`${gameURL}`}</code>\n        </Grid>\n        <Grid item xs={ 12 }>\n          <Grid container>\n            {\n              navigator.clipboard && (\n                <Grid item xs={ 6 }>\n                  <Button\n                    color=\"secondary\"\n                    variant=\"outlined\"\n                    onClick={ handleOnClickCopyToClipboard }\n                    size=\"large\"\n                    startIcon={copyStatus === COPY_STATUS.READY ? <FileCopyIcon /> : copyStatus === COPY_STATUS.SUCCESS ? <DoneIcon /> : <ClearIcon />}\n                  >\n                    Copy<Hidden xsDown> to cliboard</Hidden>\n                  </Button>\n                </Grid>\n              )\n            }\n            {\n              navigator.share && (\n                <Grid item xs={ 6 }>\n                  <Button\n                    color=\"secondary\"\n                    variant=\"outlined\"\n                    onClick={ handleOnClickShare }\n                    size=\"large\"\n                    startIcon={<ShareIcon />}\n                  >\n                    Share\n                  </Button>\n                </Grid>\n              )\n            }\n          </Grid>\n        </Grid>\n        <Grid item xs={ 6 }>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={ onJoinClick }\n            disabled={ loading }\n            size=\"large\"\n            startIcon={ loading && <CircularProgress size={ 16 } /> }\n          >\n            Start<Hidden xsDown> game</Hidden>\n          </Button>\n        </Grid>\n        <Grid item xs={ 6 }>\n          <Button component={ Link } to=\"/create\" color=\"primary\" variant=\"outlined\" size=\"large\">\n            <Hidden xsDown>Create new game</Hidden>\n            <Hidden smUp>Create</Hidden>\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Invite;\n","import { useState, useEffect, useContext } from 'react';\nimport { useHistory, useParams, Link } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Hidden from '@material-ui/core/Hidden';\nimport Context from '../context';\nimport { useTransport } from '../helpers/transport-provider';\n\nconst Join = () => {\n  const [ loading, setLoading ] = useState(false);\n  const history = useHistory();\n  const { gameID } = useParams();\n  const { setGameID } = useContext(Context);\n  const gamePath = `/game/${gameID}`;\n  const transport = useTransport();\n\n  const onJoinClick = () => {\n    setLoading(true);\n    transport.open(gameID).then(() => {\n      history.push(gamePath);\n    }).catch(() => {\n      setLoading(false);\n    });\n  }\n\n  useEffect(() => {\n    setGameID(gameID);\n  }, [ gameID ]);\n\n  return (\n    <div>\n      <h1>Join to the game</h1>\n      <Grid container spacing={ 3 }>\n        <Grid item xs={ 12 }>\n          <code>Game ID: {gameID}</code>\n        </Grid>\n        <Grid item xs={ 6 }>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={ onJoinClick }\n            size=\"large\"\n            disabled={ loading }\n            startIcon={ loading && <CircularProgress size={ 16 } /> }\n          >\n            Join game\n          </Button>\n        </Grid>\n        <Grid item xs={ 6 }>\n          <Button component={ Link } to=\"/create\" color=\"primary\" variant=\"outlined\" size=\"large\">\n            Create<Hidden xsDown> new game</Hidden>\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Join;\n","import get from 'lodash/fp/get';\nimport cn from 'classnames';\nimport './Board.scss';\n\nconst SIZE = 10;\nconst rows = new Array(SIZE).fill({});\nconst cols = new Array(SIZE).fill({});\n\nfunction Board({ fieldsData, onChange, canPlay }) {\n\n  const handleOnFieldChange = (row, col) => ({ currentTarget: { value } }) => {\n    const matchValue = String(value).toUpperCase().match(/([A-Z])/);\n\n    if (matchValue && matchValue.length) {\n      onChange({\n        row,\n        col,\n        letter: matchValue[0]\n      });\n    }\n  }\n\n  return (\n    <div className={ cn(\"board\", { 'board--active': canPlay }) }>\n        { rows.map(( rval, rowIndex) => (\n          <div className='board__row' key={`row-${rowIndex}`}>\n            { cols.map(( cval, colIndex) => {\n              const value = get(`${rowIndex}.${colIndex}`, fieldsData);\n              return (\n                <div className=\"board__col\" key={`col-${colIndex}`}>\n                  { canPlay && !value ? \n                    <input className=\"board__cell\" value='' onChange={handleOnFieldChange(rowIndex, colIndex)} /> :\n                    <div className=\"board__cell\">{ value }</div>\n                  }\n                </div>\n              )\n            } ) }\n          </div>\n        )) }\n    </div>\n  );\n}\n\nexport default Board;\n","import Board from './Board.js';\n\nexport default Board;","import React, { useEffect, useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Context from '../../context';\nimport { useTransport, TYPE } from '../../helpers/transport-provider';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    maxHeight: 120,\n    overflow: 'auto',\n  },\n}));\n\nfunction Log() {\n  const classes = useStyles();\n  const { user } = useContext(Context);\n  const transport = useTransport();\n  const [ logs, setLogs ] = useState([]);\n\n  useEffect(() => {\n    transport.onMessage((message) => {\n      switch (message.type) {\n        case (TYPE.MESSAGE): {\n          setLogs(prevLogs => [message.data, ...prevLogs]);\n          break;\n        }\n        case (TYPE.PLAY):\n          setLogs(prevLogs => [`Oponent: ${message.data.previousStep.letter}`, ...prevLogs]);\n          break;\n        default:\n      }\n      if (message.type === TYPE.MESSAGE) {\n        \n      }\n    });\n    setTimeout(() => {\n      transport.sendMessage({\n        type: TYPE.MESSAGE,\n        data: `${user} joined`,\n      });\n    }, 1000);\n  }, []);\n\n  return (\n    <List\n      className={classes.root}\n      component=\"nav\"\n    >\n      {logs.map((log, index) => (\n        <ListItem key={index}>\n          <ListItemText primary={log} />\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n\nexport default Log;\n  ","import Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nfunction Scoreboard() {\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\" size=\"small\">\n        <TableBody>\n          <TableRow>\n            <TableCell component=\"th\" scope=\"row\">\n              Player #1 last score:\n            </TableCell>\n            <TableCell align=\"right\">\n              5\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell component=\"th\" scope=\"row\">\n              Player #1 total score:\n            </TableCell>\n            <TableCell align=\"right\">\n              47\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell component=\"th\" scope=\"row\">\n              Player #2 last score:\n            </TableCell>\n            <TableCell align=\"right\">\n              2\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell component=\"th\" scope=\"row\">\n              Player #2 total score:\n            </TableCell>\n            <TableCell align=\"right\">\n              54\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default Scoreboard;\n  ","import { useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Context from '../../context';\nimport { useTransport, TYPE } from '../../helpers/transport-provider';\n\nconst useStyles = makeStyles((theme) => ({\n  btn: {\n    fontSize: '11px',\n    margin: '0 1px',\n  },\n}));\n\nfunction Controls() {\n  const classes = useStyles();\n  const history = useHistory();\n  const { setGameID, setDictionary, setUser } = useContext(Context);\n  const transport = useTransport();\n\n  const handleLeaveClick = () => {\n    transport.sendMessage({\n      type: TYPE.LEAVE,\n    });\n    setGameID(null);\n    setDictionary([]);\n    setUser(null);\n    history.push('/');\n  };\n\n  useEffect(() => {\n    transport.onMessage((message) => {\n      if (message.type === TYPE.LEAVE) {\n        setGameID(null);\n        setDictionary([]);\n        setUser(null);\n        history.push('/');\n      }\n    });\n  }, []);\n\n  return (\n    <div>\n      <Button variant=\"contained\" size=\"small\" color=\"primary\" className={classes.btn}>\n        Submit\n      </Button>\n      <Button variant=\"contained\" size=\"small\" color=\"secondary\" className={classes.btn}>\n        Pass\n      </Button>\n      <Button variant=\"contained\" size=\"small\" className={classes.btn}>\n        Reset\n      </Button>\n      <Button variant=\"outlined\" size=\"small\" className={classes.btn}>\n        Swap\n      </Button>\n      <IconButton aria-label=\"Leave\" component=\"span\" size=\"small\" onClick={handleLeaveClick}>\n        <MeetingRoomIcon />\n      </IconButton>\n    </div>\n  );\n}\nexport default Controls;\n  ","import { useContext, useState, useEffect } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport set from 'lodash/fp/set';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport Board from '../components/Board';\nimport Log from '../components/Log';\nimport Scoreboard from '../components/Scoreboard';\nimport Controls from '../components/Controls';\nimport Context from '../context';\nimport { useTransport, TYPE } from '../helpers/transport-provider';\n\nconst Game = () => {\n  const params = useParams();\n  const { gameID, dictionary, setDictionary, user } = useContext(Context);\n  const [ fieldsData, setFieldsData ] = useState({});\n  const [ canPlay, setCanPlay ] = useState(true)\n  const transport = useTransport();\n\n  useEffect(() => {\n    transport.onMessage(({ type, data }) => {\n      switch (type) {\n        case TYPE.DICTIONARY:\n          setDictionary(data)\n          break;\n        case TYPE.PLAY:\n          setCanPlay(true);\n          setFieldsData(data.fieldsData);\n          break;      \n        default:\n          break;\n      }\n    });\n\n    if (dictionary) {\n      transport.sendMessage({\n        type: TYPE.DICTIONARY,\n        data: dictionary,\n      });\n    };\n  }, []);\n\n  if (!gameID && params.gameID) {\n    return <Redirect to={`/join/${params.gameID}`} />\n  }\n\n  const handleOnBoardChange = ({ row, col, letter }) => {\n    const newFieldsData = set(`${row}.${col}`, letter, fieldsData);\n    \n    setCanPlay(false);\n    setFieldsData(newFieldsData);\n\n    transport.sendMessage({\n      type: TYPE.PLAY,\n      data: {\n        previousStep: { row, col, letter },\n        fieldsData: newFieldsData\n      }\n    });\n  }\n\n  return (\n    <div>\n      <h1>Game ID: <code>{gameID}</code></h1>\n      <p>user: <code>{user}</code></p>\n      <Grid container spacing={ 3 }>\n        <Grid item xs={ 12 } sm={ 8 }>\n          <Board fieldsData={fieldsData} onChange={ handleOnBoardChange } canPlay={canPlay}/>\n        </Grid>\n        <Grid item xs={ 12 } sm={ 4 }>\n          <Grid container direction=\"column\" alignItems=\"stretch\">\n            <Grid item xs={ 12 }>\n              <p>{ canPlay ? 'You turn!' : <small>Wait for the opponent...</small> }</p>\n            </Grid>\n            <Hidden xsDown>\n              <Grid item xs={ 12 }>\n                <Log />\n              </Grid>\n            </Hidden>\n            <Grid item xs={ 12 }>\n              <Scoreboard />\n            </Grid>\n            <Grid item xs={ 12 }>\n              <Controls />\n            </Grid>\n          </Grid>\n        </Grid>\n        {\n          dictionary && dictionary.length && (\n            <Grid item xs={ 12 }>\n              <code>{ dictionary.map((word) => `${word}, `) }</code>\n            </Grid>\n          )\n        }\n      </Grid>\n    </div>\n  );\n}\n\nexport default Game;\n","import React, { useState } from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport Context from './context';\nimport Welcome from './pages/Welcome';\nimport Create from './pages/Create';\nimport Invite from './pages/Invite';\nimport Join from './pages/Join';\nimport Game from './pages/Game';\nimport TransportProvider from './helpers/transport-provider';\nimport './App.css';\n\nfunction App() {\n  const theme = createMuiTheme({\n    palette: {\n      type: 'dark',\n      primary: {\n        light: '#ff7961',\n        main: '#f44336',\n        dark: '#ba000d',\n        contrastText: '#fff',\n      },\n    }\n  });\n  const [ gameID, setGameID ] = useState();\n  const [ dictionary, setDictionary ] = useState();\n  const [ user, setUser ] = useState();\n  const WEB_SOCKET_URL = 'wss://ice-server.app.html.wtf';\n\n  return (\n    <Router>\n      <Context.Provider value={{ \n        publicURL: window.publicURL || '', \n        gameID, setGameID, \n        dictionary, setDictionary, \n        user, setUser \n      }}>\n        <TransportProvider url={WEB_SOCKET_URL}>\n          <ThemeProvider theme={theme}>\n            <div className=\"app\">\n              <Switch>\n\n                <Route path=\"/create\">\n                  <Create />\n                </Route>\n\n                <Route path=\"/invite\">\n                  <Invite />\n                </Route>\n\n                <Route path=\"/join/:gameID\">\n                  <Join />\n                </Route>\n\n                <Route path=\"/game/:gameID\">\n                  <Game />\n                </Route>\n              \n                <Route path=\"/\">\n                  <Welcome />\n                </Route>\n\n              </Switch>        \n            </div>\n          </ThemeProvider>\n        </TransportProvider>\n      </Context.Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}