{"version":3,"sources":["context.js","pages/Welcome.jsx","pages/Create.jsx","helpers/transport-provider.js","pages/Invite.jsx","pages/Join.jsx","components/Board/index.js","components/Log/index.js","components/Scoreboard/index.js","components/Controls/index.js","pages/Game.jsx","App.js","reportWebVitals.js","index.js"],"names":["Context","createContext","Welcome","Button","component","Link","to","color","variant","Create","useState","text","setText","setGameID","useContext","handleOnClickPasteFromClipBoard","a","navigator","clipboard","readText","console","log","TextField","label","placeholder","multiline","rows","value","onChange","ev","IconButton","onClick","aria-label","nanoid","TransportContext","open","onMessage","sendMessage","user","crossBrowserPeerConnection","window","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","msRTCPeerConnection","crossBrowserSessionDescription","RTCSessionDescription","mozRTCSessionDescription","webkitRTCSessionDescription","msRTCSessionDescription","config","connection","DEFAULT_NAME","TransportProvider","props","setUser","dataChan","setDataChan","chan","setChan","transport","gameID","Promise","resolve","reject","peerConnection","dataChannel","ws","Math","floor","random","openDataChannel","onicecandidate","e","candidate","sendNegotiation","createDataChannel","reliable","onopen","setTimeout","onclose","onerror","ondatachannel","channel","type","sdp","json","from","action","data","send","JSON","stringify","processOffer","offer","setRemoteDescription","catch","sdpConstraints","createAnswer","then","setLocalDescription","err","processAnswer","answer","processIce","iceCandidate","addIceCandidate","RTCIceCandidate","WebSocket","url","offerToReceiveAudio","offerToReceiveVideo","createOffer","onmessage","parse","fn","message","Provider","useTransport","COPY_STATUS","Invite","copyStatus","setCopyStatus","loading","setLoading","history","useHistory","baseUrl","location","protocol","host","pathname","gameURL","gamePath","className","share","title","writeText","push","disabled","CircularProgress","size","Join","useParams","cells","Array","fill","Board","map","val","index","useStyles","makeStyles","theme","root","backgroundColor","palette","background","paper","Log","classes","logs","setLogs","handleMessage","concat","x","useEffect","List","subheader","ListSubheader","ListItem","ListItemText","primary","Scoreboard","TableContainer","Paper","Table","TableBody","TableRow","TableCell","scope","align","btn","margin","Controls","Game","App","createMuiTheme","light","main","dark","contrastText","ThemeProvider","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9bbe494.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst Context = createContext();\n\nexport default Context;\n","import { Link } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\n\nconst Welcome = () => (\n  <div>\n    <h1>Welcome!</h1>\n    <Button component={ Link } to=\"/create\" color=\"primary\" variant=\"contained\">Start game</Button>\n  </div>\n);\n\nexport default Welcome;\n","import { useState, useContext } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { nanoid } from 'nanoid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport Context from '../context';\n\nconst Create = () => {\n  const [ text, setText ] = useState('');\n  const { setGameID } = useContext(Context);\n\n  const handleOnChangeTextField = (ev) => {\n    console.log(ev);\n  }\n\n  const handleOnClickPasteFromClipBoard = async () => {\n    try {\n      const text = await navigator.clipboard.readText();\n      setText(text);\n    } catch (e) {\n      console.log('Failed to read clipboard');\n    }\n  }\n\n  const handleOnClickProceed = () => setGameID(nanoid());\n\n  return (\n    <div>\n      <div>\n        <TextField\n          label=\"Text\"\n          placeholder=\"Put you text here\"\n          multiline\n          rows={ 4 }\n          variant=\"outlined\"\n          value={ text }\n          onChange={ handleOnChangeTextField }\n        />\n        <IconButton\n          onClick={ handleOnClickPasteFromClipBoard }\n          aria-label=\"paste from clipboard\"\n          component=\"span\"\n          color=\"primary\"\n        >\n          <AssignmentIcon />\n        </IconButton>\n      </div>\n      <Button component={ Link } onClick={ handleOnClickProceed } to=\"/invite\" color=\"primary\" variant=\"contained\">Proceed</Button>\n    </div>\n  );\n}\n\nexport default Create;\n","import React, { useContext, createContext, useState } from 'react';\n\nconst TransportContext = createContext({\n  open: () => {},\n  onMessage: () => {},\n  sendMessage: () => {},\n  user: '',\n});\nconst crossBrowserPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection || window.msRTCPeerConnection;\nconst crossBrowserSessionDescription = window.RTCSessionDescription || window.mozRTCSessionDescription || window.webkitRTCSessionDescription || window.msRTCSessionDescription;\nconst config = { \"iceServers\": [ { \"urls\":\"stun:stun.l.google.com:19302\" } ] };\nconst connection = {};\nconst DEFAULT_NAME = 'Alice';\n\nconst TransportProvider = props => {  \n  const [ user, setUser ] = useState(null);\n  const [ dataChan, setDataChan ] = useState();\n  const [ chan, setChan ] = useState();\n  const transport = {\n    open: (gameID) => open(gameID),\n    onMessage: (fn) => onMessage(fn),\n    sendMessage: (message) => sendMessage(message),\n    user,\n  };\n\n  function onMessage(fn) {\n    if (chan) {\n      chan.onmessage = function(e) {\n        console.log(`%cMessage received:\\n${e.data}`, 'font-weight: bold');\n        if (fn) {\n          fn(e.data);\n        }\n      };\n    }\n  }\n\n  function sendMessage(message) {\n    if (dataChan) {\n      dataChan.send(message);\n    }\n  }\n\n  function open(gameID) {\n    return new Promise((resolve, reject) => {\n      var ws = null;\n      var peerConnection;\n      var dataChannel;\n      var user = `${DEFAULT_NAME}_${Math.floor(Math.random() * 10000)}`;\n  \n      function openDataChannel() {\n        peerConnection = new crossBrowserPeerConnection(config, connection);\n        peerConnection.onicecandidate = function(e) {\n          if (!peerConnection || !e || !e.candidate) return;\n          var candidate = e.candidate;\n          sendNegotiation('candidate', candidate);\n        }\n  \n        dataChannel = peerConnection.createDataChannel('datachannel', { reliable: false });\n  \n        dataChannel.onopen = function() {\n          console.log('%cDATACHANNEL OPENED', 'color: green');\n          setUser(user);\n          setDataChan(dataChannel);\n          // dirty hack to prevent case when ${user} and ${dataChan} props are not ready in Promise callback execution stream\n          setTimeout(() => {\n            resolve();\n          }, 500);          \n        };\n        dataChannel.onclose = function(){\n          console.log('%cDATACHANNEL CLOSED', 'color: red');\n        };\n        dataChannel.onerror = function() {\n          console.log('%cDATACHANNEL ERROR', 'color: red');\n        };\n  \n        peerConnection.ondatachannel = function(ev) {\n          ev.channel.onopen = function() {\n            // Data channel is open and ready to be used\n            setChan(ev.channel);\n          };\n        };\n  \n        return peerConnection;\n      }\n  \n      function sendNegotiation(type, sdp) {\n        var json = { from: user, gameID: gameID, action: type, data: sdp };\n        ws.send(JSON.stringify(json));\n      }\n  \n      function processOffer(offer) {\n        var peerConnection = openDataChannel();\n        peerConnection.setRemoteDescription(new crossBrowserSessionDescription(offer)).catch(e => {\n          console.log(e);\n        });\n  \n        var sdpConstraints = { 'mandatory': { 'OfferToReceiveAudio': false, 'OfferToReceiveVideo': false } };\n  \n        peerConnection.createAnswer(sdpConstraints).then(function(sdp) {\n          return peerConnection.setLocalDescription(sdp).then(function() {            \n            sendNegotiation(\"answer\", sdp);\n          })\n        }, function(err) {\n          console.log(err);\n        });\n      }\n  \n      function processAnswer(answer) {\n        peerConnection.setRemoteDescription(new crossBrowserSessionDescription(answer));\n      }\n  \n      function processIce(iceCandidate) {\n        peerConnection.addIceCandidate(new RTCIceCandidate(iceCandidate)).catch(e => {\n          debugger\n          console.log(e);\n        })\n      }\n  \n      ws = new WebSocket(props.url);\n      ws.onopen = function(e) {    \n        console.log('%cWebsocket opened', 'color: gray');\n        \n        openDataChannel();\n  \n        var sdpConstraints = { offerToReceiveAudio: true, offerToReceiveVideo: false };\n        peerConnection.createOffer(sdpConstraints).then(function(sdp) {\n          peerConnection.setLocalDescription(sdp);\n          sendNegotiation(\"offer\", sdp);\n        }, function(err) {\n          console.log(err);\n        });\n      };\n      ws.onclose = function(e) {   \n        console.log('%cWebsocket closed', 'color: gray');\n      };\n      ws.onerror = function(e) {   \n        console.log('%cWebsocket error', 'color: red');\n      };\n      ws.onmessage = function(e) {\n        var json = JSON.parse(e.data);\n        if (json.gameID === gameID && json.from !== user) {\n          if (json.action === 'candidate') {\n            processIce(json.data);\n          } else if (json.action === 'offer') {\n            processOffer(json.data);\n          } else if (json.action === 'answer') {\n            processAnswer(json.data);\n          }\n        }\n      };\n    });\n  }\n  \n  return <TransportContext.Provider value={transport} {...props} />;\n}\n\nexport default TransportProvider;\n\nexport const useTransport = () => useContext(TransportContext);\n","import { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport DoneIcon from '@material-ui/icons/Done';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Context from '../context';\nimport { useTransport } from '../helpers/transport-provider';\n\nconst COPY_STATUS = {\n  READY: 'ready',\n  SUCCESS: 'success',\n  FAILURE: 'failure'\n}\n\nconst Invite = () => {\n  const [ copyStatus, setCopyStatus ] = useState(COPY_STATUS.READY);\n  const [ loading, setLoading ] = useState(false);\n  const { gameID } = useContext(Context);\n  const transport = useTransport();\n  const history = useHistory();\n\n  const baseUrl = `${window.location.protocol}//${window.location.host}${window.location.pathname}/#`;\n  const gameURL = `${baseUrl}/join/${gameID}`;\n  const gamePath = `/game/${gameID}`;\n\n  const handleOnClickShare = () => {\n    navigator\n      .share({\n        url: `${gameURL}`,\n        title: \"SCRABBLE\",\n        text: \"Invite your friend to the game!\"\n      })\n      .then(() => console.log(\"Invite sent!\"))\n      .catch(err => console.log(`${err}`));\n  }\n\n  const handleOnClickCopyToClipboard = () => {\n    if (copyStatus === COPY_STATUS.READY) {\n      try {\n        navigator.clipboard.writeText(gameURL)\n          .then(() => setCopyStatus(COPY_STATUS.SUCCESS))\n          .catch(() => setCopyStatus(COPY_STATUS.FAILURE));\n      } catch (e) {\n        console.log('Failed to write to clipboard');\n      }\n    }\n  }\n  \n  const onGoClick = () => {\n    setLoading(true);\n    transport.open(gameID).then(() => {\n      history.push(gamePath);\n      setLoading(false);\n    }).catch(() => {\n      setLoading(false);\n    });\n  }\n  \n  return (\n    <div>\n      <p>Share this link with your friend to play the SRRRABBBLE:</p>\n      <code className=\"multiline-code\">{`${gameURL}`}</code>\n      {\n        navigator.share &&\n        <p><IconButton onClick={ handleOnClickShare }><ShareIcon /></IconButton></p>\n      }\n      {\n        navigator.clipboard && \n        <p><IconButton onClick={ handleOnClickCopyToClipboard } aria-label=\"paste from clipboard\" component=\"span\" >\n          {\n            copyStatus === COPY_STATUS.READY ? <FileCopyIcon /> :\n            copyStatus === COPY_STATUS.SUCCESS ? <DoneIcon /> : <ClearIcon />\n          }\n        </IconButton></p>\n      }\n      <p>\n        <Button color=\"primary\" variant=\"contained\" onClick={onGoClick} disabled={loading}>Proceed to game</Button>\n      </p>\n      {loading && <>Waiting for peer: <CircularProgress size={24} /></>}\n    </div>\n  );\n};\n\nexport default Invite;\n","import { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useTransport } from '../helpers/transport-provider';\n\nconst Join = () => {\n  const [ loading, setLoading ] = useState(false);\n  const history = useHistory();\n  const { gameID } = useParams();\n  const gamePath = `/game/${gameID}`;\n  const transport = useTransport();\n\n  const onJoinClick = () => {\n    setLoading(true);\n    transport.open(gameID).then(() => {\n      history.push(gamePath);\n      setLoading(false);\n    }).catch(() => {\n      setLoading(false);\n    });\n  }\n\n  return (\n    <div>\n      <h1>Join to the SRRRABBBLE</h1>\n      <code>Game ID: {gameID}</code>\n      <p>\n        <Button variant=\"contained\" color=\"primary\" onClick={onJoinClick} disabled={loading}>Join</Button>\n      </p>\n      {loading && <>Joining: <CircularProgress size={24} /></>}\n    </div>\n  );\n}\n\nexport default Join;\n","import './Board.css';\n\nconst cells = new Array(225).fill({});\n\nfunction Board() {\n  return (\n    <div className=\"board\">\n        {cells.map((val, index) => (\n          <div className=\"cell\" key={index} />\n        ))}\n    </div>\n  );\n}\n\nexport default Board;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport { useTransport } from '../../helpers/transport-provider';\nimport './Log.css';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nfunction Log() {\n  const classes = useStyles();\n  const transport = useTransport();\n  const [ logs, setLogs ] = useState([]);\n\n  const handleMessage = (message) => {\n    setLogs([message].concat(logs.map((x) => x)));\n  }\n\n  useEffect(() => {\n    transport.onMessage(handleMessage);\n    setTimeout(() => {\n      transport.sendMessage(`${transport.user} joined`);\n    }, 1000)\n  }, []);\n\n  return (\n    <div className=\"log\">\n      <List\n        className={classes.root}\n        component=\"nav\"\n        aria-label=\"main mailbox folders\"\n        subheader={\n          <ListSubheader component=\"div\">\n            Logs:\n          </ListSubheader>\n        }\n      >\n        {logs.map((log, index) => (\n          <ListItem key={index}>\n            <ListItemText primary={log} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n}\n\nexport default Log;\n  ","import Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport './Scoreboard.css';\n\nfunction Scoreboard() {\n  return (\n    <div className=\"scoreboard\">\n      <TableContainer component={Paper}>\n        <Table aria-label=\"simple table\" size=\"small\">\n          <TableBody>\n            <TableRow>\n              <TableCell component=\"th\" scope=\"row\">\n                Player #1 last score:\n              </TableCell>\n              <TableCell align=\"right\">\n                5\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell component=\"th\" scope=\"row\">\n                Player #1 total score:\n              </TableCell>\n              <TableCell align=\"right\">\n                47\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell component=\"th\" scope=\"row\">\n                Player #2 last score:\n              </TableCell>\n              <TableCell align=\"right\">\n                2\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell component=\"th\" scope=\"row\">\n                Player #2 total score:\n              </TableCell>\n              <TableCell align=\"right\">\n                54\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n\nexport default Scoreboard;\n  ","import Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport './Controls.css';\n\nconst useStyles = makeStyles((theme) => ({\n  btn: {\n    margin: '0 2px',\n  },\n}));\n\nfunction Controls() {\n  const classes = useStyles();\n\n  return (\n    <div className=\"controls\">\n      <Button variant=\"contained\" size=\"small\" color=\"primary\" className={classes.btn}>\n        Submit\n      </Button>\n      <Button variant=\"contained\" size=\"small\" color=\"secondary\" className={classes.btn}>\n        Pass\n      </Button>\n      <Button variant=\"contained\" size=\"small\" className={classes.btn}>\n        Reset\n      </Button>\n      <Button variant=\"contained\" size=\"small\" className={classes.btn}>\n        Swap\n      </Button>\n    </div>\n  );\n}\nexport default Controls;\n  ","import { useParams } from 'react-router-dom';\nimport Board from '../components/Board';\nimport Log from '../components/Log';\nimport Scoreboard from '../components/Scoreboard';\nimport Controls from '../components/Controls';\n\nconst Game = () => {\n  const { gameID } = useParams();\n\n  return (\n    <div>\n      <h1 className=\"title\">Game ID: {gameID}</h1>\n      <div className=\"game\">\n        <div className=\"main\">\n          <Board />\n        </div>\n        <div className=\"sidebar\">\n          <Log />\n          <Scoreboard />\n          <Controls />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n","import React, { useState } from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport Context from './context';\nimport Welcome from './pages/Welcome';\nimport Create from './pages/Create';\nimport Invite from './pages/Invite';\nimport Join from './pages/Join';\nimport Game from './pages/Game';\nimport TransportProvider from './helpers/transport-provider';\nimport './App.css';\n\nfunction App() {\n  const theme = createMuiTheme({\n    palette: {\n      type: 'dark',\n      primary: {\n        light: '#ff7961',\n        main: '#f44336',\n        dark: '#ba000d',\n        contrastText: '#fff',\n      },\n    }\n  });\n  const [ gameID, setGameID ] = useState();\n  const WEB_SOCKET_URL = 'ws://88.99.175.232:8054';\n\n  return (\n    <Router>\n      <Context.Provider value={{ gameID, setGameID }}>\n        <TransportProvider url={WEB_SOCKET_URL}>\n          <ThemeProvider theme={theme}>\n            <div className=\"app\">\n              <Switch>\n\n                <Route path=\"/create\">\n                  <Create />\n                </Route>\n\n                <Route path=\"/invite\">\n                  <Invite />\n                </Route>\n\n                <Route path=\"/join/:gameID\">\n                  <Join />\n                </Route>\n\n                <Route path=\"/game/:gameID\">\n                  <Game />\n                </Route>\n              \n                <Route path=\"/\">\n                  <Welcome />\n                </Route>\n\n              </Switch>        \n            </div>\n          </ThemeProvider>\n        </TransportProvider>\n      </Context.Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}